// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gamelive.proto

#import "GPBProtocolBuffers_RuntimeSupport.h"
#import "Gamelive.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma mark - PBMGameliveRoot

@implementation PBMGameliveRoot

@end

static GPBFileDescriptor *PBMGameliveRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"Dacai.Protobuf"
                                                     syntax:GPBFileSyntaxProto2];
  }
  return descriptor;
}

#pragma mark - Enum PBMFootballEvent

GPBEnumDescriptor *PBMFootballEvent_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "Goals", .number = PBMFootballEvent_Goals },
      { .name = "Red", .number = PBMFootballEvent_Red },
      { .name = "Yellow", .number = PBMFootballEvent_Yellow },
      { .name = "Invaild", .number = PBMFootballEvent_Invaild },
      { .name = "Penalties", .number = PBMFootballEvent_Penalties },
      { .name = "Own", .number = PBMFootballEvent_Own },
      { .name = "Y2Red", .number = PBMFootballEvent_Y2Red },
    };
    static const char *extraTextFormatInfo = "\001\006\003b\000";
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PBMFootballEvent)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:PBMFootballEvent_IsValidValue
                                      extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

BOOL PBMFootballEvent_IsValidValue(int32_t value__) {
  switch (value__) {
    case PBMFootballEvent_Goals:
    case PBMFootballEvent_Red:
    case PBMFootballEvent_Yellow:
    case PBMFootballEvent_Invaild:
    case PBMFootballEvent_Penalties:
    case PBMFootballEvent_Own:
    case PBMFootballEvent_Y2Red:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PBMFootballMatchStatus

GPBEnumDescriptor *PBMFootballMatchStatus_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "FootballNotStart", .number = PBMFootballMatchStatus_FootballNotStart },
      { .name = "FootballFirstHalf", .number = PBMFootballMatchStatus_FootballFirstHalf },
      { .name = "FootballHalftime", .number = PBMFootballMatchStatus_FootballHalftime },
      { .name = "FootballSecondHalf", .number = PBMFootballMatchStatus_FootballSecondHalf },
      { .name = "FootballEnded", .number = PBMFootballMatchStatus_FootballEnded },
      { .name = "FootballInterrupt", .number = PBMFootballMatchStatus_FootballInterrupt },
      { .name = "FootballPending", .number = PBMFootballMatchStatus_FootballPending },
      { .name = "FootballCut", .number = PBMFootballMatchStatus_FootballCut },
      { .name = "FootballPutOff", .number = PBMFootballMatchStatus_FootballPutOff },
      { .name = "FootballCancel", .number = PBMFootballMatchStatus_FootballCancel },
    };
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PBMFootballMatchStatus)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:PBMFootballMatchStatus_IsValidValue];
  }
  return descriptor;
}

BOOL PBMFootballMatchStatus_IsValidValue(int32_t value__) {
  switch (value__) {
    case PBMFootballMatchStatus_FootballNotStart:
    case PBMFootballMatchStatus_FootballFirstHalf:
    case PBMFootballMatchStatus_FootballHalftime:
    case PBMFootballMatchStatus_FootballSecondHalf:
    case PBMFootballMatchStatus_FootballEnded:
    case PBMFootballMatchStatus_FootballInterrupt:
    case PBMFootballMatchStatus_FootballPending:
    case PBMFootballMatchStatus_FootballCut:
    case PBMFootballMatchStatus_FootballPutOff:
    case PBMFootballMatchStatus_FootballCancel:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - Enum PBMBasketballMatchStatus

GPBEnumDescriptor *PBMBasketballMatchStatus_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "BasketballNotStart", .number = PBMBasketballMatchStatus_BasketballNotStart },
      { .name = "BasketballFirstSection", .number = PBMBasketballMatchStatus_BasketballFirstSection },
      { .name = "BasketballFirstBreak", .number = PBMBasketballMatchStatus_BasketballFirstBreak },
      { .name = "BasketballSecondSection", .number = PBMBasketballMatchStatus_BasketballSecondSection },
      { .name = "BasketballSecondBreak", .number = PBMBasketballMatchStatus_BasketballSecondBreak },
      { .name = "BasketballThirdSection", .number = PBMBasketballMatchStatus_BasketballThirdSection },
      { .name = "BasketballThirdBreak", .number = PBMBasketballMatchStatus_BasketballThirdBreak },
      { .name = "BasketballFourthSection", .number = PBMBasketballMatchStatus_BasketballFourthSection },
      { .name = "BasketballFourthBreak", .number = PBMBasketballMatchStatus_BasketballFourthBreak },
      { .name = "BasketballExtraSection", .number = PBMBasketballMatchStatus_BasketballExtraSection },
      { .name = "BasketballExtraBreak", .number = PBMBasketballMatchStatus_BasketballExtraBreak },
      { .name = "BasketballNormalEnded", .number = PBMBasketballMatchStatus_BasketballNormalEnded },
      { .name = "BasketballExtraEnded", .number = PBMBasketballMatchStatus_BasketballExtraEnded },
    };
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PBMBasketballMatchStatus)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:PBMBasketballMatchStatus_IsValidValue];
  }
  return descriptor;
}

BOOL PBMBasketballMatchStatus_IsValidValue(int32_t value__) {
  switch (value__) {
    case PBMBasketballMatchStatus_BasketballNotStart:
    case PBMBasketballMatchStatus_BasketballFirstSection:
    case PBMBasketballMatchStatus_BasketballFirstBreak:
    case PBMBasketballMatchStatus_BasketballSecondSection:
    case PBMBasketballMatchStatus_BasketballSecondBreak:
    case PBMBasketballMatchStatus_BasketballThirdSection:
    case PBMBasketballMatchStatus_BasketballThirdBreak:
    case PBMBasketballMatchStatus_BasketballFourthSection:
    case PBMBasketballMatchStatus_BasketballFourthBreak:
    case PBMBasketballMatchStatus_BasketballExtraSection:
    case PBMBasketballMatchStatus_BasketballExtraBreak:
    case PBMBasketballMatchStatus_BasketballNormalEnded:
    case PBMBasketballMatchStatus_BasketballExtraEnded:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - PBMFootballLive

@implementation PBMFootballLive

@dynamic unfinishedArray;
@dynamic completedArray;
@dynamic attentionIdArray;
@dynamic hasCurrentTicks, currentTicks;

typedef struct PBMFootballLive_Storage {
  uint32_t _has_storage_[1];
  NSMutableArray *unfinishedArray;
  NSMutableArray *completedArray;
  GPBInt64Array *attentionIdArray;
  NSString *currentTicks;
} PBMFootballLive_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "unfinishedArray",
        .number = PBMFootballLive_FieldNumber_UnfinishedArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMFootballLive_Storage, unfinishedArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMFootballLive_MatchGroup),
        .fieldOptions = NULL,
      },
      {
        .name = "completedArray",
        .number = PBMFootballLive_FieldNumber_CompletedArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMFootballLive_Storage, completedArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMFootballLive_MatchGroup),
        .fieldOptions = NULL,
      },
      {
        .name = "attentionIdArray",
        .number = PBMFootballLive_FieldNumber_AttentionIdArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMFootballLive_Storage, attentionIdArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "currentTicks",
        .number = PBMFootballLive_FieldNumber_CurrentTicks,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFootballLive_Storage, currentTicks),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMFootballLive class]
                                              rootClass:[PBMGameliveRoot class]
                                                   file:PBMGameliveRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMFootballLive_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMFootballLive_Event

@implementation PBMFootballLive_Event

@dynamic hasHomeOrAway, homeOrAway;
@dynamic hasPlayer, player;
@dynamic hasTime, time;
@dynamic hasEvent, event;

typedef struct PBMFootballLive_Event_Storage {
  uint32_t _has_storage_[1];
  BOOL homeOrAway;
  int32_t time;
  PBMFootballEvent event;
  NSString *player;
} PBMFootballLive_Event_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "homeOrAway",
        .number = PBMFootballLive_Event_FieldNumber_HomeOrAway,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeBool,
        .offset = offsetof(PBMFootballLive_Event_Storage, homeOrAway),
        .defaultValue.valueBool = NO,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "player",
        .number = PBMFootballLive_Event_FieldNumber_Player,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFootballLive_Event_Storage, player),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "time",
        .number = PBMFootballLive_Event_FieldNumber_Time,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMFootballLive_Event_Storage, time),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "event",
        .number = PBMFootballLive_Event_FieldNumber_Event,
        .hasIndex = 3,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .type = GPBTypeEnum,
        .offset = offsetof(PBMFootballLive_Event_Storage, event),
        .defaultValue.valueEnum = PBMFootballEvent_Goals,
        .typeSpecific.enumDescFunc = PBMFootballEvent_EnumDescriptor,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMFootballLive_Event class]
                                              rootClass:[PBMGameliveRoot class]
                                                   file:PBMGameliveRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMFootballLive_Event_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMFootballLive_Match

@implementation PBMFootballLive_Match

@dynamic hasMatchId, matchId;
@dynamic hasOrderNumber, orderNumber;
@dynamic hasOrderNumberName, orderNumberName;
@dynamic hasCompetition, competition;
@dynamic hasStartTime, startTime;
@dynamic hasHalfTime, halfTime;
@dynamic hasHomeName, homeName;
@dynamic hasAwayName, awayName;
@dynamic hasHomeLogo, homeLogo;
@dynamic hasAwayLogo, awayLogo;
@dynamic hasHomeRank, homeRank;
@dynamic hasAwayRank, awayRank;
@dynamic hasHomeScore, homeScore;
@dynamic hasAwayScore, awayScore;
@dynamic hasStatus, status;
@dynamic eventListArray;
@dynamic hasCommentCount, commentCount;
@dynamic hasHomeHalfScore, homeHalfScore;
@dynamic hasAwayHalfScore, awayHalfScore;

typedef struct PBMFootballLive_Match_Storage {
  uint32_t _has_storage_[1];
  int32_t orderNumber;
  int32_t homeScore;
  int32_t awayScore;
  PBMFootballMatchStatus status;
  int32_t commentCount;
  int32_t homeHalfScore;
  int32_t awayHalfScore;
  NSString *orderNumberName;
  NSString *competition;
  NSString *startTime;
  NSString *halfTime;
  NSString *homeName;
  NSString *awayName;
  NSString *homeLogo;
  NSString *awayLogo;
  NSString *homeRank;
  NSString *awayRank;
  NSMutableArray *eventListArray;
  int64_t matchId;
} PBMFootballLive_Match_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "matchId",
        .number = PBMFootballLive_Match_FieldNumber_MatchId,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMFootballLive_Match_Storage, matchId),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "orderNumber",
        .number = PBMFootballLive_Match_FieldNumber_OrderNumber,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMFootballLive_Match_Storage, orderNumber),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "orderNumberName",
        .number = PBMFootballLive_Match_FieldNumber_OrderNumberName,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFootballLive_Match_Storage, orderNumberName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "competition",
        .number = PBMFootballLive_Match_FieldNumber_Competition,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFootballLive_Match_Storage, competition),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "startTime",
        .number = PBMFootballLive_Match_FieldNumber_StartTime,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFootballLive_Match_Storage, startTime),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "halfTime",
        .number = PBMFootballLive_Match_FieldNumber_HalfTime,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFootballLive_Match_Storage, halfTime),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "homeName",
        .number = PBMFootballLive_Match_FieldNumber_HomeName,
        .hasIndex = 6,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFootballLive_Match_Storage, homeName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "awayName",
        .number = PBMFootballLive_Match_FieldNumber_AwayName,
        .hasIndex = 7,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFootballLive_Match_Storage, awayName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "homeLogo",
        .number = PBMFootballLive_Match_FieldNumber_HomeLogo,
        .hasIndex = 8,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFootballLive_Match_Storage, homeLogo),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "awayLogo",
        .number = PBMFootballLive_Match_FieldNumber_AwayLogo,
        .hasIndex = 9,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFootballLive_Match_Storage, awayLogo),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "homeRank",
        .number = PBMFootballLive_Match_FieldNumber_HomeRank,
        .hasIndex = 10,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFootballLive_Match_Storage, homeRank),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "awayRank",
        .number = PBMFootballLive_Match_FieldNumber_AwayRank,
        .hasIndex = 11,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFootballLive_Match_Storage, awayRank),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "homeScore",
        .number = PBMFootballLive_Match_FieldNumber_HomeScore,
        .hasIndex = 12,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMFootballLive_Match_Storage, homeScore),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "awayScore",
        .number = PBMFootballLive_Match_FieldNumber_AwayScore,
        .hasIndex = 13,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMFootballLive_Match_Storage, awayScore),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "status",
        .number = PBMFootballLive_Match_FieldNumber_Status,
        .hasIndex = 14,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .type = GPBTypeEnum,
        .offset = offsetof(PBMFootballLive_Match_Storage, status),
        .defaultValue.valueEnum = PBMFootballMatchStatus_FootballNotStart,
        .typeSpecific.enumDescFunc = PBMFootballMatchStatus_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "eventListArray",
        .number = PBMFootballLive_Match_FieldNumber_EventListArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMFootballLive_Match_Storage, eventListArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMFootballLive_Event),
        .fieldOptions = NULL,
      },
      {
        .name = "commentCount",
        .number = PBMFootballLive_Match_FieldNumber_CommentCount,
        .hasIndex = 16,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMFootballLive_Match_Storage, commentCount),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "homeHalfScore",
        .number = PBMFootballLive_Match_FieldNumber_HomeHalfScore,
        .hasIndex = 17,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMFootballLive_Match_Storage, homeHalfScore),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "awayHalfScore",
        .number = PBMFootballLive_Match_FieldNumber_AwayHalfScore,
        .hasIndex = 18,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMFootballLive_Match_Storage, awayHalfScore),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMFootballLive_Match class]
                                              rootClass:[PBMGameliveRoot class]
                                                   file:PBMGameliveRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMFootballLive_Match_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMFootballLive_MatchGroup

@implementation PBMFootballLive_MatchGroup

@dynamic hasDate, date;
@dynamic matchListArray;

typedef struct PBMFootballLive_MatchGroup_Storage {
  uint32_t _has_storage_[1];
  NSString *date;
  NSMutableArray *matchListArray;
} PBMFootballLive_MatchGroup_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "date",
        .number = PBMFootballLive_MatchGroup_FieldNumber_Date,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFootballLive_MatchGroup_Storage, date),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "matchListArray",
        .number = PBMFootballLive_MatchGroup_FieldNumber_MatchListArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMFootballLive_MatchGroup_Storage, matchListArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMFootballLive_Match),
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMFootballLive_MatchGroup class]
                                              rootClass:[PBMGameliveRoot class]
                                                   file:PBMGameliveRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMFootballLive_MatchGroup_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMLiveCommentItem

@implementation PBMLiveCommentItem

@dynamic hasMatchId, matchId;
@dynamic hasCommentCount, commentCount;

typedef struct PBMLiveCommentItem_Storage {
  uint32_t _has_storage_[1];
  int32_t commentCount;
  int64_t matchId;
} PBMLiveCommentItem_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "matchId",
        .number = PBMLiveCommentItem_FieldNumber_MatchId,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMLiveCommentItem_Storage, matchId),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "commentCount",
        .number = PBMLiveCommentItem_FieldNumber_CommentCount,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMLiveCommentItem_Storage, commentCount),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMLiveCommentItem class]
                                              rootClass:[PBMGameliveRoot class]
                                                   file:PBMGameliveRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMLiveCommentItem_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMFootballLiveUpdate

@implementation PBMFootballLiveUpdate

@dynamic hasCurrentTicks, currentTicks;
@dynamic matchesArray;
@dynamic commentItemsArray;

typedef struct PBMFootballLiveUpdate_Storage {
  uint32_t _has_storage_[1];
  NSString *currentTicks;
  NSMutableArray *matchesArray;
  NSMutableArray *commentItemsArray;
} PBMFootballLiveUpdate_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "currentTicks",
        .number = PBMFootballLiveUpdate_FieldNumber_CurrentTicks,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFootballLiveUpdate_Storage, currentTicks),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "matchesArray",
        .number = PBMFootballLiveUpdate_FieldNumber_MatchesArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMFootballLiveUpdate_Storage, matchesArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMFootballLive_Match),
        .fieldOptions = NULL,
      },
      {
        .name = "commentItemsArray",
        .number = PBMFootballLiveUpdate_FieldNumber_CommentItemsArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMFootballLiveUpdate_Storage, commentItemsArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMLiveCommentItem),
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMFootballLiveUpdate class]
                                              rootClass:[PBMGameliveRoot class]
                                                   file:PBMGameliveRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMFootballLiveUpdate_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMBasketballLive

@implementation PBMBasketballLive

@dynamic unfinishedArray;
@dynamic completedArray;
@dynamic attentionIdArray;
@dynamic hasCurrentTicks, currentTicks;

typedef struct PBMBasketballLive_Storage {
  uint32_t _has_storage_[1];
  NSMutableArray *unfinishedArray;
  NSMutableArray *completedArray;
  GPBInt64Array *attentionIdArray;
  NSString *currentTicks;
} PBMBasketballLive_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "unfinishedArray",
        .number = PBMBasketballLive_FieldNumber_UnfinishedArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMBasketballLive_Storage, unfinishedArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMBasketballLive_MatchGroup),
        .fieldOptions = NULL,
      },
      {
        .name = "completedArray",
        .number = PBMBasketballLive_FieldNumber_CompletedArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMBasketballLive_Storage, completedArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMBasketballLive_MatchGroup),
        .fieldOptions = NULL,
      },
      {
        .name = "attentionIdArray",
        .number = PBMBasketballLive_FieldNumber_AttentionIdArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMBasketballLive_Storage, attentionIdArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "currentTicks",
        .number = PBMBasketballLive_FieldNumber_CurrentTicks,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMBasketballLive_Storage, currentTicks),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMBasketballLive class]
                                              rootClass:[PBMGameliveRoot class]
                                                   file:PBMGameliveRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMBasketballLive_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMBasketballLive_Match

@implementation PBMBasketballLive_Match

@dynamic hasMatchId, matchId;
@dynamic hasOrderNumber, orderNumber;
@dynamic hasOrderNumberName, orderNumberName;
@dynamic hasCompetition, competition;
@dynamic hasStartTime, startTime;
@dynamic hasHomeName, homeName;
@dynamic hasAwayName, awayName;
@dynamic hasHomeLogo, homeLogo;
@dynamic hasAwayLogo, awayLogo;
@dynamic hasHomeRank, homeRank;
@dynamic hasAwayRank, awayRank;
@dynamic hasStatus, status;
@dynamic hasCommentCount, commentCount;
@dynamic hasOnTime, onTime;
@dynamic homeScoreArray;
@dynamic awayScoreArray;

typedef struct PBMBasketballLive_Match_Storage {
  uint32_t _has_storage_[1];
  int32_t orderNumber;
  PBMBasketballMatchStatus status;
  int32_t commentCount;
  NSString *orderNumberName;
  NSString *competition;
  NSString *startTime;
  NSString *homeName;
  NSString *awayName;
  NSString *homeLogo;
  NSString *awayLogo;
  NSString *homeRank;
  NSString *awayRank;
  NSString *onTime;
  GPBInt32Array *homeScoreArray;
  GPBInt32Array *awayScoreArray;
  int64_t matchId;
} PBMBasketballLive_Match_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "matchId",
        .number = PBMBasketballLive_Match_FieldNumber_MatchId,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMBasketballLive_Match_Storage, matchId),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "orderNumber",
        .number = PBMBasketballLive_Match_FieldNumber_OrderNumber,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMBasketballLive_Match_Storage, orderNumber),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "orderNumberName",
        .number = PBMBasketballLive_Match_FieldNumber_OrderNumberName,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMBasketballLive_Match_Storage, orderNumberName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "competition",
        .number = PBMBasketballLive_Match_FieldNumber_Competition,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMBasketballLive_Match_Storage, competition),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "startTime",
        .number = PBMBasketballLive_Match_FieldNumber_StartTime,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMBasketballLive_Match_Storage, startTime),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "homeName",
        .number = PBMBasketballLive_Match_FieldNumber_HomeName,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMBasketballLive_Match_Storage, homeName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "awayName",
        .number = PBMBasketballLive_Match_FieldNumber_AwayName,
        .hasIndex = 6,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMBasketballLive_Match_Storage, awayName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "homeLogo",
        .number = PBMBasketballLive_Match_FieldNumber_HomeLogo,
        .hasIndex = 7,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMBasketballLive_Match_Storage, homeLogo),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "awayLogo",
        .number = PBMBasketballLive_Match_FieldNumber_AwayLogo,
        .hasIndex = 8,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMBasketballLive_Match_Storage, awayLogo),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "homeRank",
        .number = PBMBasketballLive_Match_FieldNumber_HomeRank,
        .hasIndex = 9,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMBasketballLive_Match_Storage, homeRank),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "awayRank",
        .number = PBMBasketballLive_Match_FieldNumber_AwayRank,
        .hasIndex = 10,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMBasketballLive_Match_Storage, awayRank),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "status",
        .number = PBMBasketballLive_Match_FieldNumber_Status,
        .hasIndex = 11,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .type = GPBTypeEnum,
        .offset = offsetof(PBMBasketballLive_Match_Storage, status),
        .defaultValue.valueEnum = PBMBasketballMatchStatus_BasketballNotStart,
        .typeSpecific.enumDescFunc = PBMBasketballMatchStatus_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "commentCount",
        .number = PBMBasketballLive_Match_FieldNumber_CommentCount,
        .hasIndex = 12,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMBasketballLive_Match_Storage, commentCount),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "onTime",
        .number = PBMBasketballLive_Match_FieldNumber_OnTime,
        .hasIndex = 13,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMBasketballLive_Match_Storage, onTime),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "homeScoreArray",
        .number = PBMBasketballLive_Match_FieldNumber_HomeScoreArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMBasketballLive_Match_Storage, homeScoreArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "awayScoreArray",
        .number = PBMBasketballLive_Match_FieldNumber_AwayScoreArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMBasketballLive_Match_Storage, awayScoreArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMBasketballLive_Match class]
                                              rootClass:[PBMGameliveRoot class]
                                                   file:PBMGameliveRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMBasketballLive_Match_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMBasketballLive_MatchGroup

@implementation PBMBasketballLive_MatchGroup

@dynamic hasDate, date;
@dynamic matchListArray;

typedef struct PBMBasketballLive_MatchGroup_Storage {
  uint32_t _has_storage_[1];
  NSString *date;
  NSMutableArray *matchListArray;
} PBMBasketballLive_MatchGroup_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "date",
        .number = PBMBasketballLive_MatchGroup_FieldNumber_Date,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMBasketballLive_MatchGroup_Storage, date),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "matchListArray",
        .number = PBMBasketballLive_MatchGroup_FieldNumber_MatchListArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMBasketballLive_MatchGroup_Storage, matchListArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMBasketballLive_Match),
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMBasketballLive_MatchGroup class]
                                              rootClass:[PBMGameliveRoot class]
                                                   file:PBMGameliveRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMBasketballLive_MatchGroup_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMBasketballLiveUpdate

@implementation PBMBasketballLiveUpdate

@dynamic hasCurrentTicks, currentTicks;
@dynamic matchesArray;
@dynamic commentItemsArray;

typedef struct PBMBasketballLiveUpdate_Storage {
  uint32_t _has_storage_[1];
  NSString *currentTicks;
  NSMutableArray *matchesArray;
  NSMutableArray *commentItemsArray;
} PBMBasketballLiveUpdate_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "currentTicks",
        .number = PBMBasketballLiveUpdate_FieldNumber_CurrentTicks,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMBasketballLiveUpdate_Storage, currentTicks),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "matchesArray",
        .number = PBMBasketballLiveUpdate_FieldNumber_MatchesArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMBasketballLiveUpdate_Storage, matchesArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMBasketballLive_Match),
        .fieldOptions = NULL,
      },
      {
        .name = "commentItemsArray",
        .number = PBMBasketballLiveUpdate_FieldNumber_CommentItemsArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMBasketballLiveUpdate_Storage, commentItemsArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMLiveCommentItem),
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMBasketballLiveUpdate class]
                                              rootClass:[PBMGameliveRoot class]
                                                   file:PBMGameliveRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMBasketballLiveUpdate_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMActionStatus

@implementation PBMActionStatus

@dynamic hasDeviceToken, deviceToken;
@dynamic hasGameType, gameType;
@dynamic hasMatchId, matchId;
@dynamic hasBeginDate, beginDate;
@dynamic hasFocus, focus;

typedef struct PBMActionStatus_Storage {
  uint32_t _has_storage_[1];
  BOOL focus;
  int32_t gameType;
  NSString *deviceToken;
  NSString *beginDate;
  int64_t matchId;
} PBMActionStatus_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "deviceToken",
        .number = PBMActionStatus_FieldNumber_DeviceToken,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMActionStatus_Storage, deviceToken),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gameType",
        .number = PBMActionStatus_FieldNumber_GameType,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMActionStatus_Storage, gameType),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "matchId",
        .number = PBMActionStatus_FieldNumber_MatchId,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMActionStatus_Storage, matchId),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "beginDate",
        .number = PBMActionStatus_FieldNumber_BeginDate,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMActionStatus_Storage, beginDate),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "focus",
        .number = PBMActionStatus_FieldNumber_Focus,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .type = GPBTypeBool,
        .offset = offsetof(PBMActionStatus_Storage, focus),
        .defaultValue.valueBool = NO,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMActionStatus class]
                                              rootClass:[PBMGameliveRoot class]
                                                   file:PBMGameliveRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMActionStatus_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end


// @@protoc_insertion_point(global_scope)
