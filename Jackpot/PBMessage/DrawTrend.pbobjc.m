// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: draw_trend.proto

#import "GPBProtocolBuffers_RuntimeSupport.h"
#import "DrawTrend.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma mark - PBMDrawTrendRoot

@implementation PBMDrawTrendRoot

@end

static GPBFileDescriptor *PBMDrawTrendRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"Dacai.Protobuf"
                                                     syntax:GPBFileSyntaxProto2];
  }
  return descriptor;
}

#pragma mark - PBMDrawTrend

@implementation PBMDrawTrend

@dynamic drawResultArray;
@dynamic allCountArray;
@dynamic initMissArray;
@dynamic avgMissArray;
@dynamic maxMissArray;
@dynamic maxComboArray;

typedef struct PBMDrawTrend_Storage {
  uint32_t _has_storage_[1];
  NSMutableArray *drawResultArray;
  GPBInt32Array *allCountArray;
  GPBInt32Array *initMissArray;
  GPBInt32Array *avgMissArray;
  GPBInt32Array *maxMissArray;
  GPBInt32Array *maxComboArray;
} PBMDrawTrend_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "drawResultArray",
        .number = PBMDrawTrend_FieldNumber_DrawResultArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMDrawTrend_Storage, drawResultArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMDrawTrend_Result),
        .fieldOptions = NULL,
      },
      {
        .name = "allCountArray",
        .number = PBMDrawTrend_FieldNumber_AllCountArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMDrawTrend_Storage, allCountArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "initMissArray",
        .number = PBMDrawTrend_FieldNumber_InitMissArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMDrawTrend_Storage, initMissArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "avgMissArray",
        .number = PBMDrawTrend_FieldNumber_AvgMissArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMDrawTrend_Storage, avgMissArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "maxMissArray",
        .number = PBMDrawTrend_FieldNumber_MaxMissArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMDrawTrend_Storage, maxMissArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "maxComboArray",
        .number = PBMDrawTrend_FieldNumber_MaxComboArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMDrawTrend_Storage, maxComboArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMDrawTrend class]
                                              rootClass:[PBMDrawTrendRoot class]
                                                   file:PBMDrawTrendRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMDrawTrend_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMDrawTrend_Result

@implementation PBMDrawTrend_Result

@dynamic numbersArray;
@dynamic hasGameName, gameName;

typedef struct PBMDrawTrend_Result_Storage {
  uint32_t _has_storage_[1];
  GPBInt32Array *numbersArray;
  NSString *gameName;
} PBMDrawTrend_Result_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "numbersArray",
        .number = PBMDrawTrend_Result_FieldNumber_NumbersArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMDrawTrend_Result_Storage, numbersArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gameName",
        .number = PBMDrawTrend_Result_FieldNumber_GameName,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMDrawTrend_Result_Storage, gameName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMDrawTrend_Result class]
                                              rootClass:[PBMDrawTrendRoot class]
                                                   file:PBMDrawTrendRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMDrawTrend_Result_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end


// @@protoc_insertion_point(global_scope)
