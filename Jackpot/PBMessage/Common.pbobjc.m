// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: common.proto

#import "GPBProtocolBuffers_RuntimeSupport.h"
#import "Common.pbobjc.h"
#import "UserAccount.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma mark - PBMCommonRoot

@implementation PBMCommonRoot

+ (GPBExtensionRegistry*)extensionRegistry {
  // This is called by +initialize so there is no need to worry
  // about thread safety and initialization of registry.
  static GPBExtensionRegistry* registry = nil;
  if (!registry) {
    registry = [[GPBExtensionRegistry alloc] init];
    static GPBExtensionDescription descriptions[] = {
    };
    #pragma unused (descriptions)
    [registry addExtensions:[PBMUserAccountRoot extensionRegistry]];
  }
  return registry;
}

@end

static GPBFileDescriptor *PBMCommonRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"Dacai.Protobuf"
                                                     syntax:GPBFileSyntaxProto2];
  }
  return descriptor;
}

#pragma mark - Enum PBMDeviceRegisterType

GPBEnumDescriptor *PBMDeviceRegisterType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "DeviceRegisterActivate", .number = PBMDeviceRegisterType_DeviceRegisterActivate },
      { .name = "DeviceRegisterUpdate", .number = PBMDeviceRegisterType_DeviceRegisterUpdate },
      { .name = "DevicePushTokenUpdate", .number = PBMDeviceRegisterType_DevicePushTokenUpdate },
    };
    static const char *extraTextFormatInfo = "\003\000\026\000\001\024\000\002\025\000";
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PBMDeviceRegisterType)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:PBMDeviceRegisterType_IsValidValue
                                      extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

BOOL PBMDeviceRegisterType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PBMDeviceRegisterType_DeviceRegisterActivate:
    case PBMDeviceRegisterType_DeviceRegisterUpdate:
    case PBMDeviceRegisterType_DevicePushTokenUpdate:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - PBMDeviceRegister

@implementation PBMDeviceRegister

@dynamic hasActiveType, activeType;
@dynamic hasDeviceId, deviceId;
@dynamic hasPushToken, pushToken;

typedef struct PBMDeviceRegister_Storage {
  uint32_t _has_storage_[1];
  int32_t activeType;
  NSString *deviceId;
  NSString *pushToken;
} PBMDeviceRegister_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "activeType",
        .number = PBMDeviceRegister_FieldNumber_ActiveType,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMDeviceRegister_Storage, activeType),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "deviceId",
        .number = PBMDeviceRegister_FieldNumber_DeviceId,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMDeviceRegister_Storage, deviceId),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "pushToken",
        .number = PBMDeviceRegister_FieldNumber_PushToken,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMDeviceRegister_Storage, pushToken),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMDeviceRegister class]
                                              rootClass:[PBMCommonRoot class]
                                                   file:PBMCommonRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMDeviceRegister_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMDeviceGuid

@implementation PBMDeviceGuid

@dynamic hasGuid, guid;

typedef struct PBMDeviceGuid_Storage {
  uint32_t _has_storage_[1];
  NSString *guid;
} PBMDeviceGuid_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "guid",
        .number = PBMDeviceGuid_FieldNumber_Guid,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMDeviceGuid_Storage, guid),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMDeviceGuid class]
                                              rootClass:[PBMCommonRoot class]
                                                   file:PBMCommonRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMDeviceGuid_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMSyncDate

@implementation PBMSyncDate

@dynamic hasDate, date;

typedef struct PBMSyncDate_Storage {
  uint32_t _has_storage_[1];
  NSString *date;
} PBMSyncDate_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "date",
        .number = PBMSyncDate_FieldNumber_Date,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMSyncDate_Storage, date),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMSyncDate class]
                                              rootClass:[PBMCommonRoot class]
                                                   file:PBMCommonRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMSyncDate_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMLoadingPage

@implementation PBMLoadingPage

@dynamic hasImageURL, imageURL;
@dynamic hasEventURL, eventURL;
@dynamic hasUpdateInfo, updateInfo;

typedef struct PBMLoadingPage_Storage {
  uint32_t _has_storage_[1];
  NSString *imageURL;
  NSString *eventURL;
  PBMUpdateVersion *updateInfo;
} PBMLoadingPage_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imageURL",
        .number = PBMLoadingPage_FieldNumber_ImageURL,
        .hasIndex = 0,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .type = GPBTypeString,
        .offset = offsetof(PBMLoadingPage_Storage, imageURL),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "eventURL",
        .number = PBMLoadingPage_FieldNumber_EventURL,
        .hasIndex = 1,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .type = GPBTypeString,
        .offset = offsetof(PBMLoadingPage_Storage, eventURL),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "updateInfo",
        .number = PBMLoadingPage_FieldNumber_UpdateInfo,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMLoadingPage_Storage, updateInfo),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMUpdateVersion),
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\002\001\005\241!!\000\002\005\241!!\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMLoadingPage class]
                                              rootClass:[PBMCommonRoot class]
                                                   file:PBMCommonRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMLoadingPage_Storage)
                                             wireFormat:NO
                                    extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

@end


// @@protoc_insertion_point(global_scope)
