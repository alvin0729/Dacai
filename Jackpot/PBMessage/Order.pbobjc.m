// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: order.proto

#import "GPBProtocolBuffers_RuntimeSupport.h"
#import "Order.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma mark - PBMOrderRoot

@implementation PBMOrderRoot

@end

static GPBFileDescriptor *PBMOrderRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"Dacai.Protobuf"
                                                     syntax:GPBFileSyntaxProto2];
  }
  return descriptor;
}

#pragma mark - PBMPlaceAnOrder

@implementation PBMPlaceAnOrder

@dynamic hasBetDescription, betDescription;
@dynamic hasBetOrderNumbers, betOrderNumbers;
@dynamic hasBetType, betType;
@dynamic hasChannelType, channelType;
@dynamic hasDeviceNum, deviceNum;
@dynamic hasGameId, gameId;
@dynamic hasGameTypeId, gameTypeId;
@dynamic hasMultiple, multiple;
@dynamic hasPlatformType, platformType;
@dynamic hasQuantity, quantity;
@dynamic hasTotalAmount, totalAmount;
@dynamic hasBetTypeDesc, betTypeDesc;
@dynamic hasProjectBuyType, projectBuyType;
@dynamic hasPassTypeDesc, passTypeDesc;

typedef struct PBMPlaceAnOrder_Storage {
  uint32_t _has_storage_[1];
  int32_t betType;
  int32_t channelType;
  int32_t gameId;
  int32_t gameTypeId;
  int32_t platformType;
  int32_t totalAmount;
  int32_t projectBuyType;
  NSString *betDescription;
  NSString *betOrderNumbers;
  NSString *deviceNum;
  NSString *betTypeDesc;
  NSString *passTypeDesc;
  int64_t multiple;
  int64_t quantity;
} PBMPlaceAnOrder_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "betDescription",
        .number = PBMPlaceAnOrder_FieldNumber_BetDescription,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMPlaceAnOrder_Storage, betDescription),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "betOrderNumbers",
        .number = PBMPlaceAnOrder_FieldNumber_BetOrderNumbers,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMPlaceAnOrder_Storage, betOrderNumbers),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "betType",
        .number = PBMPlaceAnOrder_FieldNumber_BetType,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMPlaceAnOrder_Storage, betType),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "channelType",
        .number = PBMPlaceAnOrder_FieldNumber_ChannelType,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMPlaceAnOrder_Storage, channelType),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "deviceNum",
        .number = PBMPlaceAnOrder_FieldNumber_DeviceNum,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMPlaceAnOrder_Storage, deviceNum),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gameId",
        .number = PBMPlaceAnOrder_FieldNumber_GameId,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMPlaceAnOrder_Storage, gameId),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gameTypeId",
        .number = PBMPlaceAnOrder_FieldNumber_GameTypeId,
        .hasIndex = 6,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMPlaceAnOrder_Storage, gameTypeId),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "multiple",
        .number = PBMPlaceAnOrder_FieldNumber_Multiple,
        .hasIndex = 7,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMPlaceAnOrder_Storage, multiple),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "platformType",
        .number = PBMPlaceAnOrder_FieldNumber_PlatformType,
        .hasIndex = 8,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMPlaceAnOrder_Storage, platformType),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "quantity",
        .number = PBMPlaceAnOrder_FieldNumber_Quantity,
        .hasIndex = 9,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMPlaceAnOrder_Storage, quantity),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "totalAmount",
        .number = PBMPlaceAnOrder_FieldNumber_TotalAmount,
        .hasIndex = 10,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMPlaceAnOrder_Storage, totalAmount),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "betTypeDesc",
        .number = PBMPlaceAnOrder_FieldNumber_BetTypeDesc,
        .hasIndex = 11,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMPlaceAnOrder_Storage, betTypeDesc),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "projectBuyType",
        .number = PBMPlaceAnOrder_FieldNumber_ProjectBuyType,
        .hasIndex = 12,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMPlaceAnOrder_Storage, projectBuyType),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "passTypeDesc",
        .number = PBMPlaceAnOrder_FieldNumber_PassTypeDesc,
        .hasIndex = 13,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMPlaceAnOrder_Storage, passTypeDesc),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMPlaceAnOrder class]
                                              rootClass:[PBMOrderRoot class]
                                                   file:PBMOrderRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMPlaceAnOrder_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMChaseToPlaceAnOrder

@implementation PBMChaseToPlaceAnOrder

@dynamic hasDisseminate, disseminate;
@dynamic hasFollowContent, followContent;
@dynamic hasFollowStopCondition, followStopCondition;
@dynamic hasFollowStopTypeId, followStopTypeId;
@dynamic hasFollowTypeId, followTypeId;
@dynamic hasGameId, gameId;
@dynamic hasGameTypeId, gameTypeId;
@dynamic hasTotalAmount, totalAmount;
@dynamic hasTotalCount, totalCount;
@dynamic hasGameName, gameName;

typedef struct PBMChaseToPlaceAnOrder_Storage {
  uint32_t _has_storage_[1];
  int32_t followStopTypeId;
  int32_t followTypeId;
  int32_t gameTypeId;
  NSString *disseminate;
  NSString *followContent;
  NSString *followStopCondition;
  NSString *gameName;
  int64_t gameId;
  int64_t totalAmount;
  int64_t totalCount;
} PBMChaseToPlaceAnOrder_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "disseminate",
        .number = PBMChaseToPlaceAnOrder_FieldNumber_Disseminate,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMChaseToPlaceAnOrder_Storage, disseminate),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "followContent",
        .number = PBMChaseToPlaceAnOrder_FieldNumber_FollowContent,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMChaseToPlaceAnOrder_Storage, followContent),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "followStopCondition",
        .number = PBMChaseToPlaceAnOrder_FieldNumber_FollowStopCondition,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMChaseToPlaceAnOrder_Storage, followStopCondition),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "followStopTypeId",
        .number = PBMChaseToPlaceAnOrder_FieldNumber_FollowStopTypeId,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMChaseToPlaceAnOrder_Storage, followStopTypeId),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "followTypeId",
        .number = PBMChaseToPlaceAnOrder_FieldNumber_FollowTypeId,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMChaseToPlaceAnOrder_Storage, followTypeId),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gameId",
        .number = PBMChaseToPlaceAnOrder_FieldNumber_GameId,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMChaseToPlaceAnOrder_Storage, gameId),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gameTypeId",
        .number = PBMChaseToPlaceAnOrder_FieldNumber_GameTypeId,
        .hasIndex = 6,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMChaseToPlaceAnOrder_Storage, gameTypeId),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "totalAmount",
        .number = PBMChaseToPlaceAnOrder_FieldNumber_TotalAmount,
        .hasIndex = 7,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMChaseToPlaceAnOrder_Storage, totalAmount),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "totalCount",
        .number = PBMChaseToPlaceAnOrder_FieldNumber_TotalCount,
        .hasIndex = 8,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMChaseToPlaceAnOrder_Storage, totalCount),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gameName",
        .number = PBMChaseToPlaceAnOrder_FieldNumber_GameName,
        .hasIndex = 9,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMChaseToPlaceAnOrder_Storage, gameName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMChaseToPlaceAnOrder class]
                                              rootClass:[PBMOrderRoot class]
                                                   file:PBMOrderRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMChaseToPlaceAnOrder_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMCreateOrderResult

@implementation PBMCreateOrderResult

@dynamic hasOrderId, orderId;
@dynamic hasAccountAmt, accountAmt;
@dynamic redPacketArray;

typedef struct PBMCreateOrderResult_Storage {
  uint32_t _has_storage_[1];
  NSString *accountAmt;
  NSMutableArray *redPacketArray;
  int64_t orderId;
} PBMCreateOrderResult_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "orderId",
        .number = PBMCreateOrderResult_FieldNumber_OrderId,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMCreateOrderResult_Storage, orderId),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "accountAmt",
        .number = PBMCreateOrderResult_FieldNumber_AccountAmt,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMCreateOrderResult_Storage, accountAmt),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "redPacketArray",
        .number = PBMCreateOrderResult_FieldNumber_RedPacketArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMCreateOrderResult_Storage, redPacketArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMCreateOrderResult_RedPacket),
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMCreateOrderResult class]
                                              rootClass:[PBMOrderRoot class]
                                                   file:PBMOrderRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMCreateOrderResult_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMCreateOrderResult_RedPacket

@implementation PBMCreateOrderResult_RedPacket

@dynamic hasId_p, id_p;
@dynamic hasName, name;
@dynamic hasUseDesc, useDesc;
@dynamic hasEndDate, endDate;
@dynamic hasOrigAmt, origAmt;
@dynamic hasCurAmt, curAmt;

typedef struct PBMCreateOrderResult_RedPacket_Storage {
  uint32_t _has_storage_[1];
  int32_t origAmt;
  int32_t curAmt;
  NSString *name;
  NSString *useDesc;
  NSString *endDate;
  int64_t id_p;
} PBMCreateOrderResult_RedPacket_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .number = PBMCreateOrderResult_RedPacket_FieldNumber_Id_p,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMCreateOrderResult_RedPacket_Storage, id_p),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "name",
        .number = PBMCreateOrderResult_RedPacket_FieldNumber_Name,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMCreateOrderResult_RedPacket_Storage, name),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "useDesc",
        .number = PBMCreateOrderResult_RedPacket_FieldNumber_UseDesc,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMCreateOrderResult_RedPacket_Storage, useDesc),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "endDate",
        .number = PBMCreateOrderResult_RedPacket_FieldNumber_EndDate,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMCreateOrderResult_RedPacket_Storage, endDate),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "origAmt",
        .number = PBMCreateOrderResult_RedPacket_FieldNumber_OrigAmt,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMCreateOrderResult_RedPacket_Storage, origAmt),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "curAmt",
        .number = PBMCreateOrderResult_RedPacket_FieldNumber_CurAmt,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMCreateOrderResult_RedPacket_Storage, curAmt),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMCreateOrderResult_RedPacket class]
                                              rootClass:[PBMOrderRoot class]
                                                   file:PBMOrderRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMCreateOrderResult_RedPacket_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMPayParams

@implementation PBMPayParams

@dynamic hasSourceId, sourceId;
@dynamic hasPayPassword, payPassword;
@dynamic hasAmt, amt;
@dynamic hasSourceType, sourceType;
@dynamic hasNightPay, nightPay;

typedef struct PBMPayParams_Storage {
  uint32_t _has_storage_[1];
  BOOL nightPay;
  int32_t sourceType;
  NSString *payPassword;
  NSString *amt;
  int64_t sourceId;
} PBMPayParams_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "sourceId",
        .number = PBMPayParams_FieldNumber_SourceId,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMPayParams_Storage, sourceId),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "payPassword",
        .number = PBMPayParams_FieldNumber_PayPassword,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMPayParams_Storage, payPassword),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "amt",
        .number = PBMPayParams_FieldNumber_Amt,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMPayParams_Storage, amt),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "sourceType",
        .number = PBMPayParams_FieldNumber_SourceType,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMPayParams_Storage, sourceType),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "nightPay",
        .number = PBMPayParams_FieldNumber_NightPay,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .type = GPBTypeBool,
        .offset = offsetof(PBMPayParams_Storage, nightPay),
        .defaultValue.valueBool = NO,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMPayParams class]
                                              rootClass:[PBMOrderRoot class]
                                                   file:PBMOrderRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMPayParams_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMPayParamsResult

@implementation PBMPayParamsResult

@dynamic hasParams, params;
@dynamic hasDrawTime, drawTime;
@dynamic hasGameNameNew, gameNameNew;
@dynamic hasGameIdNew, gameIdNew;

typedef struct PBMPayParamsResult_Storage {
  uint32_t _has_storage_[1];
  int32_t gameIdNew;
  NSString *params;
  NSString *drawTime;
  NSString *gameNameNew;
} PBMPayParamsResult_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "params",
        .number = PBMPayParamsResult_FieldNumber_Params,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMPayParamsResult_Storage, params),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "drawTime",
        .number = PBMPayParamsResult_FieldNumber_DrawTime,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMPayParamsResult_Storage, drawTime),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gameNameNew",
        .number = PBMPayParamsResult_FieldNumber_GameNameNew,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMPayParamsResult_Storage, gameNameNew),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gameIdNew",
        .number = PBMPayParamsResult_FieldNumber_GameIdNew,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMPayParamsResult_Storage, gameIdNew),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMPayParamsResult class]
                                              rootClass:[PBMOrderRoot class]
                                                   file:PBMOrderRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMPayParamsResult_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMPay

@implementation PBMPay

@dynamic hasOrderId, orderId;
@dynamic hasRedPkgId, redPkgId;
@dynamic hasGameTypeId, gameTypeId;
@dynamic hasToken, token;
@dynamic hasPayPassword, payPassword;
@dynamic hasNightPay, nightPay;
@dynamic hasGameName, gameName;
@dynamic hasGameId, gameId;

typedef struct PBMPay_Storage {
  uint32_t _has_storage_[1];
  BOOL nightPay;
  int32_t gameTypeId;
  NSString *token;
  NSString *payPassword;
  NSString *gameName;
  int64_t orderId;
  int64_t redPkgId;
  int64_t gameId;
} PBMPay_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "orderId",
        .number = PBMPay_FieldNumber_OrderId,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMPay_Storage, orderId),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "redPkgId",
        .number = PBMPay_FieldNumber_RedPkgId,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMPay_Storage, redPkgId),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gameTypeId",
        .number = PBMPay_FieldNumber_GameTypeId,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMPay_Storage, gameTypeId),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "token",
        .number = PBMPay_FieldNumber_Token,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMPay_Storage, token),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "payPassword",
        .number = PBMPay_FieldNumber_PayPassword,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMPay_Storage, payPassword),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "nightPay",
        .number = PBMPay_FieldNumber_NightPay,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .type = GPBTypeBool,
        .offset = offsetof(PBMPay_Storage, nightPay),
        .defaultValue.valueBool = NO,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gameName",
        .number = PBMPay_FieldNumber_GameName,
        .hasIndex = 6,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMPay_Storage, gameName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gameId",
        .number = PBMPay_FieldNumber_GameId,
        .hasIndex = 7,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMPay_Storage, gameId),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMPay class]
                                              rootClass:[PBMOrderRoot class]
                                                   file:PBMOrderRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMPay_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMPayResult

@implementation PBMPayResult

@dynamic hasProjectId, projectId;
@dynamic hasDrawDate, drawDate;
@dynamic hasToken, token;
@dynamic hasGameNameNew, gameNameNew;
@dynamic hasGameIdNew, gameIdNew;

typedef struct PBMPayResult_Storage {
  uint32_t _has_storage_[1];
  int32_t gameIdNew;
  NSString *drawDate;
  NSString *token;
  NSString *gameNameNew;
  int64_t projectId;
} PBMPayResult_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "projectId",
        .number = PBMPayResult_FieldNumber_ProjectId,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMPayResult_Storage, projectId),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "drawDate",
        .number = PBMPayResult_FieldNumber_DrawDate,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMPayResult_Storage, drawDate),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "token",
        .number = PBMPayResult_FieldNumber_Token,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMPayResult_Storage, token),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gameNameNew",
        .number = PBMPayResult_FieldNumber_GameNameNew,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMPayResult_Storage, gameNameNew),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gameIdNew",
        .number = PBMPayResult_FieldNumber_GameIdNew,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMPayResult_Storage, gameIdNew),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMPayResult class]
                                              rootClass:[PBMOrderRoot class]
                                                   file:PBMOrderRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMPayResult_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMOrderDetailResult

@implementation PBMOrderDetailResult

@dynamic hasTotalNum, totalNum;
@dynamic hasTotalMoney, totalMoney;
@dynamic hasGameType, gameType;
@dynamic dltItemsArray;
@dynamic hasWinIssue, winIssue;
@dynamic hasWinDate, winDate;
@dynamic winRedsArray;
@dynamic winBluesArray;
@dynamic jcItemsArray;

typedef struct PBMOrderDetailResult_Storage {
  uint32_t _has_storage_[1];
  int32_t totalNum;
  int32_t gameType;
  NSMutableArray *dltItemsArray;
  NSString *winIssue;
  NSString *winDate;
  NSMutableArray *winRedsArray;
  NSMutableArray *winBluesArray;
  NSMutableArray *jcItemsArray;
  int64_t totalMoney;
} PBMOrderDetailResult_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "totalNum",
        .number = PBMOrderDetailResult_FieldNumber_TotalNum,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMOrderDetailResult_Storage, totalNum),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "totalMoney",
        .number = PBMOrderDetailResult_FieldNumber_TotalMoney,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMOrderDetailResult_Storage, totalMoney),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gameType",
        .number = PBMOrderDetailResult_FieldNumber_GameType,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMOrderDetailResult_Storage, gameType),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "dltItemsArray",
        .number = PBMOrderDetailResult_FieldNumber_DltItemsArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMOrderDetailResult_Storage, dltItemsArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMOrderDetailResult_DltItem),
        .fieldOptions = NULL,
      },
      {
        .name = "winIssue",
        .number = PBMOrderDetailResult_FieldNumber_WinIssue,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_Storage, winIssue),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "winDate",
        .number = PBMOrderDetailResult_FieldNumber_WinDate,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_Storage, winDate),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "winRedsArray",
        .number = PBMOrderDetailResult_FieldNumber_WinRedsArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_Storage, winRedsArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "winBluesArray",
        .number = PBMOrderDetailResult_FieldNumber_WinBluesArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_Storage, winBluesArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "jcItemsArray",
        .number = PBMOrderDetailResult_FieldNumber_JcItemsArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMOrderDetailResult_Storage, jcItemsArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMOrderDetailResult_JcItem),
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMOrderDetailResult class]
                                              rootClass:[PBMOrderRoot class]
                                                   file:PBMOrderRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMOrderDetailResult_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMOrderDetailResult_DltResult

@implementation PBMOrderDetailResult_DltResult

@dynamic redsArray;
@dynamic bluesArray;

typedef struct PBMOrderDetailResult_DltResult_Storage {
  uint32_t _has_storage_[1];
  NSMutableArray *redsArray;
  NSMutableArray *bluesArray;
} PBMOrderDetailResult_DltResult_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "redsArray",
        .number = PBMOrderDetailResult_DltResult_FieldNumber_RedsArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_DltResult_Storage, redsArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "bluesArray",
        .number = PBMOrderDetailResult_DltResult_FieldNumber_BluesArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_DltResult_Storage, bluesArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMOrderDetailResult_DltResult class]
                                              rootClass:[PBMOrderRoot class]
                                                   file:PBMOrderRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMOrderDetailResult_DltResult_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMOrderDetailResult_DltDTResult

@implementation PBMOrderDetailResult_DltDTResult

@dynamic redDansArray;
@dynamic redTuosArray;
@dynamic blueDansArray;
@dynamic blueTuosArray;

typedef struct PBMOrderDetailResult_DltDTResult_Storage {
  uint32_t _has_storage_[1];
  NSMutableArray *redDansArray;
  NSMutableArray *redTuosArray;
  NSMutableArray *blueDansArray;
  NSMutableArray *blueTuosArray;
} PBMOrderDetailResult_DltDTResult_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "redDansArray",
        .number = PBMOrderDetailResult_DltDTResult_FieldNumber_RedDansArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_DltDTResult_Storage, redDansArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "redTuosArray",
        .number = PBMOrderDetailResult_DltDTResult_FieldNumber_RedTuosArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_DltDTResult_Storage, redTuosArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "blueDansArray",
        .number = PBMOrderDetailResult_DltDTResult_FieldNumber_BlueDansArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_DltDTResult_Storage, blueDansArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "blueTuosArray",
        .number = PBMOrderDetailResult_DltDTResult_FieldNumber_BlueTuosArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_DltDTResult_Storage, blueTuosArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMOrderDetailResult_DltDTResult class]
                                              rootClass:[PBMOrderRoot class]
                                                   file:PBMOrderRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMOrderDetailResult_DltDTResult_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMOrderDetailResult_DltItem

@implementation PBMOrderDetailResult_DltItem

@dynamic hasOrderNum, orderNum;
@dynamic hasIssue, issue;
@dynamic hasGamePlayId, gamePlayId;
@dynamic hasGamePlay, gamePlay;
@dynamic hasQuantity, quantity;
@dynamic hasMultiple, multiple;
@dynamic hasMoney, money;
@dynamic dltResultsArray;
@dynamic dltDtResultsArray;
@dynamic hasTicketStatus, ticketStatus;
@dynamic hasTicketStatusDesc, ticketStatusDesc;
@dynamic hasIsWin, isWin;
@dynamic hasWinDesc, winDesc;
@dynamic hasIsAppend, isAppend;

typedef struct PBMOrderDetailResult_DltItem_Storage {
  uint32_t _has_storage_[1];
  BOOL isWin;
  BOOL isAppend;
  int32_t gamePlayId;
  int32_t money;
  int32_t ticketStatus;
  NSString *orderNum;
  NSString *issue;
  NSString *gamePlay;
  NSMutableArray *dltResultsArray;
  NSMutableArray *dltDtResultsArray;
  NSString *ticketStatusDesc;
  NSString *winDesc;
  int64_t quantity;
  int64_t multiple;
} PBMOrderDetailResult_DltItem_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "orderNum",
        .number = PBMOrderDetailResult_DltItem_FieldNumber_OrderNum,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_DltItem_Storage, orderNum),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "issue",
        .number = PBMOrderDetailResult_DltItem_FieldNumber_Issue,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_DltItem_Storage, issue),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gamePlayId",
        .number = PBMOrderDetailResult_DltItem_FieldNumber_GamePlayId,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMOrderDetailResult_DltItem_Storage, gamePlayId),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gamePlay",
        .number = PBMOrderDetailResult_DltItem_FieldNumber_GamePlay,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_DltItem_Storage, gamePlay),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "quantity",
        .number = PBMOrderDetailResult_DltItem_FieldNumber_Quantity,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMOrderDetailResult_DltItem_Storage, quantity),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "multiple",
        .number = PBMOrderDetailResult_DltItem_FieldNumber_Multiple,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMOrderDetailResult_DltItem_Storage, multiple),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "money",
        .number = PBMOrderDetailResult_DltItem_FieldNumber_Money,
        .hasIndex = 6,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMOrderDetailResult_DltItem_Storage, money),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "dltResultsArray",
        .number = PBMOrderDetailResult_DltItem_FieldNumber_DltResultsArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMOrderDetailResult_DltItem_Storage, dltResultsArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMOrderDetailResult_DltResult),
        .fieldOptions = NULL,
      },
      {
        .name = "dltDtResultsArray",
        .number = PBMOrderDetailResult_DltItem_FieldNumber_DltDtResultsArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMOrderDetailResult_DltItem_Storage, dltDtResultsArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMOrderDetailResult_DltDTResult),
        .fieldOptions = NULL,
      },
      {
        .name = "ticketStatus",
        .number = PBMOrderDetailResult_DltItem_FieldNumber_TicketStatus,
        .hasIndex = 9,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMOrderDetailResult_DltItem_Storage, ticketStatus),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "ticketStatusDesc",
        .number = PBMOrderDetailResult_DltItem_FieldNumber_TicketStatusDesc,
        .hasIndex = 10,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_DltItem_Storage, ticketStatusDesc),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "isWin",
        .number = PBMOrderDetailResult_DltItem_FieldNumber_IsWin,
        .hasIndex = 11,
        .flags = GPBFieldOptional,
        .type = GPBTypeBool,
        .offset = offsetof(PBMOrderDetailResult_DltItem_Storage, isWin),
        .defaultValue.valueBool = NO,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "winDesc",
        .number = PBMOrderDetailResult_DltItem_FieldNumber_WinDesc,
        .hasIndex = 12,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_DltItem_Storage, winDesc),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "isAppend",
        .number = PBMOrderDetailResult_DltItem_FieldNumber_IsAppend,
        .hasIndex = 13,
        .flags = GPBFieldOptional,
        .type = GPBTypeBool,
        .offset = offsetof(PBMOrderDetailResult_DltItem_Storage, isAppend),
        .defaultValue.valueBool = NO,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMOrderDetailResult_DltItem class]
                                              rootClass:[PBMOrderRoot class]
                                                   file:PBMOrderRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMOrderDetailResult_DltItem_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMOrderDetailResult_JcResultItem

@implementation PBMOrderDetailResult_JcResultItem

@dynamic hasIsWin, isWin;
@dynamic hasResult, result;

typedef struct PBMOrderDetailResult_JcResultItem_Storage {
  uint32_t _has_storage_[1];
  BOOL isWin;
  NSString *result;
} PBMOrderDetailResult_JcResultItem_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "isWin",
        .number = PBMOrderDetailResult_JcResultItem_FieldNumber_IsWin,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeBool,
        .offset = offsetof(PBMOrderDetailResult_JcResultItem_Storage, isWin),
        .defaultValue.valueBool = NO,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "result",
        .number = PBMOrderDetailResult_JcResultItem_FieldNumber_Result,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_JcResultItem_Storage, result),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMOrderDetailResult_JcResultItem class]
                                              rootClass:[PBMOrderRoot class]
                                                   file:PBMOrderRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMOrderDetailResult_JcResultItem_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMOrderDetailResult_JcResult

@implementation PBMOrderDetailResult_JcResult

@dynamic hasDateNum, dateNum;
@dynamic jcResultItemsArray;
@dynamic hasGameType, gameType;
@dynamic hasRqs, rqs;

typedef struct PBMOrderDetailResult_JcResult_Storage {
  uint32_t _has_storage_[1];
  int32_t gameType;
  NSString *dateNum;
  NSMutableArray *jcResultItemsArray;
  NSString *rqs;
} PBMOrderDetailResult_JcResult_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "dateNum",
        .number = PBMOrderDetailResult_JcResult_FieldNumber_DateNum,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_JcResult_Storage, dateNum),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "jcResultItemsArray",
        .number = PBMOrderDetailResult_JcResult_FieldNumber_JcResultItemsArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMOrderDetailResult_JcResult_Storage, jcResultItemsArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMOrderDetailResult_JcResultItem),
        .fieldOptions = NULL,
      },
      {
        .name = "gameType",
        .number = PBMOrderDetailResult_JcResult_FieldNumber_GameType,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMOrderDetailResult_JcResult_Storage, gameType),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "rqs",
        .number = PBMOrderDetailResult_JcResult_FieldNumber_Rqs,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_JcResult_Storage, rqs),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMOrderDetailResult_JcResult class]
                                              rootClass:[PBMOrderRoot class]
                                                   file:PBMOrderRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMOrderDetailResult_JcResult_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMOrderDetailResult_JcItem

@implementation PBMOrderDetailResult_JcItem

@dynamic hasOrderNum, orderNum;
@dynamic hasGameName, gameName;
@dynamic hasGamePlay, gamePlay;
@dynamic hasMultiple, multiple;
@dynamic hasMoney, money;
@dynamic jcResultsArray;
@dynamic hasTicketStatus, ticketStatus;
@dynamic hasTicketStatusDesc, ticketStatusDesc;
@dynamic hasIsWin, isWin;
@dynamic hasWinDesc, winDesc;

typedef struct PBMOrderDetailResult_JcItem_Storage {
  uint32_t _has_storage_[1];
  BOOL isWin;
  int32_t multiple;
  int32_t money;
  int32_t ticketStatus;
  NSString *orderNum;
  NSString *gameName;
  NSString *gamePlay;
  NSMutableArray *jcResultsArray;
  NSString *ticketStatusDesc;
  NSString *winDesc;
} PBMOrderDetailResult_JcItem_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "orderNum",
        .number = PBMOrderDetailResult_JcItem_FieldNumber_OrderNum,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_JcItem_Storage, orderNum),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gameName",
        .number = PBMOrderDetailResult_JcItem_FieldNumber_GameName,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_JcItem_Storage, gameName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gamePlay",
        .number = PBMOrderDetailResult_JcItem_FieldNumber_GamePlay,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_JcItem_Storage, gamePlay),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "multiple",
        .number = PBMOrderDetailResult_JcItem_FieldNumber_Multiple,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMOrderDetailResult_JcItem_Storage, multiple),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "money",
        .number = PBMOrderDetailResult_JcItem_FieldNumber_Money,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMOrderDetailResult_JcItem_Storage, money),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "jcResultsArray",
        .number = PBMOrderDetailResult_JcItem_FieldNumber_JcResultsArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMOrderDetailResult_JcItem_Storage, jcResultsArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMOrderDetailResult_JcResult),
        .fieldOptions = NULL,
      },
      {
        .name = "ticketStatus",
        .number = PBMOrderDetailResult_JcItem_FieldNumber_TicketStatus,
        .hasIndex = 6,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMOrderDetailResult_JcItem_Storage, ticketStatus),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "ticketStatusDesc",
        .number = PBMOrderDetailResult_JcItem_FieldNumber_TicketStatusDesc,
        .hasIndex = 7,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_JcItem_Storage, ticketStatusDesc),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "isWin",
        .number = PBMOrderDetailResult_JcItem_FieldNumber_IsWin,
        .hasIndex = 8,
        .flags = GPBFieldOptional,
        .type = GPBTypeBool,
        .offset = offsetof(PBMOrderDetailResult_JcItem_Storage, isWin),
        .defaultValue.valueBool = NO,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "winDesc",
        .number = PBMOrderDetailResult_JcItem_FieldNumber_WinDesc,
        .hasIndex = 9,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOrderDetailResult_JcItem_Storage, winDesc),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMOrderDetailResult_JcItem class]
                                              rootClass:[PBMOrderRoot class]
                                                   file:PBMOrderRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMOrderDetailResult_JcItem_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMCopyOrderAndPay

@implementation PBMCopyOrderAndPay

@dynamic hasProjectId, projectId;
@dynamic hasGameId, gameId;
@dynamic hasGameTypeId, gameTypeId;
@dynamic hasPassword, password;

typedef struct PBMCopyOrderAndPay_Storage {
  uint32_t _has_storage_[1];
  int32_t gameId;
  int32_t gameTypeId;
  NSString *password;
  int64_t projectId;
} PBMCopyOrderAndPay_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "projectId",
        .number = PBMCopyOrderAndPay_FieldNumber_ProjectId,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMCopyOrderAndPay_Storage, projectId),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gameId",
        .number = PBMCopyOrderAndPay_FieldNumber_GameId,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMCopyOrderAndPay_Storage, gameId),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gameTypeId",
        .number = PBMCopyOrderAndPay_FieldNumber_GameTypeId,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMCopyOrderAndPay_Storage, gameTypeId),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "password",
        .number = PBMCopyOrderAndPay_FieldNumber_Password,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMCopyOrderAndPay_Storage, password),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMCopyOrderAndPay class]
                                              rootClass:[PBMOrderRoot class]
                                                   file:PBMOrderRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMCopyOrderAndPay_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end


// @@protoc_insertion_point(global_scope)
