// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: user_account.proto

#import "GPBProtocolBuffers_RuntimeSupport.h"
#import "UserAccount.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma mark - PBMUserAccountRoot

@implementation PBMUserAccountRoot

@end

static GPBFileDescriptor *PBMUserAccountRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"Dacai.Protobuf"
                                                     syntax:GPBFileSyntaxProto2];
  }
  return descriptor;
}

#pragma mark - PBMVerityItem

@implementation PBMVerityItem

@dynamic hasVerityType, verityType;
@dynamic hasEndTime, endTime;

typedef struct PBMVerityItem_Storage {
  uint32_t _has_storage_[1];
  int32_t verityType;
  int32_t endTime;
} PBMVerityItem_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "verityType",
        .number = PBMVerityItem_FieldNumber_VerityType,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMVerityItem_Storage, verityType),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "endTime",
        .number = PBMVerityItem_FieldNumber_EndTime,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMVerityItem_Storage, endTime),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMVerityItem class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMVerityItem_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMLoginItem

@implementation PBMLoginItem

@dynamic hasUserId, userId;
@dynamic hasSessionContent, sessionContent;
@dynamic hasBetOpen, betOpen;
@dynamic hasBangdingPhoneNum, bangdingPhoneNum;
@dynamic hasSecureKey, secureKey;
@dynamic hasUserNickName, userNickName;

typedef struct PBMLoginItem_Storage {
  uint32_t _has_storage_[1];
  BOOL betOpen;
  BOOL bangdingPhoneNum;
  NSString *sessionContent;
  NSString *secureKey;
  NSString *userNickName;
  int64_t userId;
} PBMLoginItem_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .number = PBMLoginItem_FieldNumber_UserId,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMLoginItem_Storage, userId),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "sessionContent",
        .number = PBMLoginItem_FieldNumber_SessionContent,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMLoginItem_Storage, sessionContent),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "betOpen",
        .number = PBMLoginItem_FieldNumber_BetOpen,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeBool,
        .offset = offsetof(PBMLoginItem_Storage, betOpen),
        .defaultValue.valueBool = NO,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "bangdingPhoneNum",
        .number = PBMLoginItem_FieldNumber_BangdingPhoneNum,
        .hasIndex = 3,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .type = GPBTypeBool,
        .offset = offsetof(PBMLoginItem_Storage, bangdingPhoneNum),
        .defaultValue.valueBool = NO,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "secureKey",
        .number = PBMLoginItem_FieldNumber_SecureKey,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMLoginItem_Storage, secureKey),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "userNickName",
        .number = PBMLoginItem_FieldNumber_UserNickName,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMLoginItem_Storage, userNickName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\001\004\020\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMLoginItem class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMLoginItem_Storage)
                                             wireFormat:NO
                                    extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

@end

#pragma mark - PBMLogOnParam

@implementation PBMLogOnParam

@dynamic hasUserName, userName;
@dynamic hasUserPassword, userPassword;
@dynamic hasPushToken, pushToken;

typedef struct PBMLogOnParam_Storage {
  uint32_t _has_storage_[1];
  NSString *userName;
  NSString *userPassword;
  NSString *pushToken;
} PBMLogOnParam_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userName",
        .number = PBMLogOnParam_FieldNumber_UserName,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMLogOnParam_Storage, userName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "userPassword",
        .number = PBMLogOnParam_FieldNumber_UserPassword,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMLogOnParam_Storage, userPassword),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "pushToken",
        .number = PBMLogOnParam_FieldNumber_PushToken,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMLogOnParam_Storage, pushToken),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMLogOnParam class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMLogOnParam_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMAlipayAuthInfo

@implementation PBMAlipayAuthInfo

@dynamic hasAuthInfo, authInfo;

typedef struct PBMAlipayAuthInfo_Storage {
  uint32_t _has_storage_[1];
  NSString *authInfo;
} PBMAlipayAuthInfo_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "authInfo",
        .number = PBMAlipayAuthInfo_FieldNumber_AuthInfo,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMAlipayAuthInfo_Storage, authInfo),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMAlipayAuthInfo class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMAlipayAuthInfo_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMThirdLogOnParam

@implementation PBMThirdLogOnParam

@dynamic hasAppid, appid;
@dynamic hasAccessToken, accessToken;
@dynamic hasOpenid, openid;
@dynamic hasType, type;
@dynamic hasPushToken, pushToken;

typedef struct PBMThirdLogOnParam_Storage {
  uint32_t _has_storage_[1];
  int32_t type;
  NSString *appid;
  NSString *accessToken;
  NSString *openid;
  NSString *pushToken;
} PBMThirdLogOnParam_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "appid",
        .number = PBMThirdLogOnParam_FieldNumber_Appid,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMThirdLogOnParam_Storage, appid),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "accessToken",
        .number = PBMThirdLogOnParam_FieldNumber_AccessToken,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMThirdLogOnParam_Storage, accessToken),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "openid",
        .number = PBMThirdLogOnParam_FieldNumber_Openid,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMThirdLogOnParam_Storage, openid),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "type",
        .number = PBMThirdLogOnParam_FieldNumber_Type,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMThirdLogOnParam_Storage, type),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "pushToken",
        .number = PBMThirdLogOnParam_FieldNumber_PushToken,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMThirdLogOnParam_Storage, pushToken),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMThirdLogOnParam class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMThirdLogOnParam_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMThirdLogOnItem

@implementation PBMThirdLogOnItem

@dynamic hasLoginItem, loginItem;
@dynamic hasOpenid, openid;
@dynamic hasUnionid, unionid;
@dynamic hasType, type;
@dynamic hasIconURL, iconURL;

typedef struct PBMThirdLogOnItem_Storage {
  uint32_t _has_storage_[1];
  int32_t type;
  PBMLoginItem *loginItem;
  NSString *openid;
  NSString *unionid;
  NSString *iconURL;
} PBMThirdLogOnItem_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "loginItem",
        .number = PBMThirdLogOnItem_FieldNumber_LoginItem,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMThirdLogOnItem_Storage, loginItem),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMLoginItem),
        .fieldOptions = NULL,
      },
      {
        .name = "openid",
        .number = PBMThirdLogOnItem_FieldNumber_Openid,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMThirdLogOnItem_Storage, openid),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "unionid",
        .number = PBMThirdLogOnItem_FieldNumber_Unionid,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMThirdLogOnItem_Storage, unionid),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "type",
        .number = PBMThirdLogOnItem_FieldNumber_Type,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMThirdLogOnItem_Storage, type),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "iconURL",
        .number = PBMThirdLogOnItem_FieldNumber_IconURL,
        .hasIndex = 4,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .type = GPBTypeString,
        .offset = offsetof(PBMThirdLogOnItem_Storage, iconURL),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\001\005\004\241!!\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMThirdLogOnItem class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMThirdLogOnItem_Storage)
                                             wireFormat:NO
                                    extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

@end

#pragma mark - PBMThirdBangdingPhoneParam

@implementation PBMThirdBangdingPhoneParam

@dynamic hasNickName, nickName;
@dynamic hasOpenid, openid;
@dynamic hasUnionid, unionid;
@dynamic hasType, type;
@dynamic hasPhoneNum, phoneNum;
@dynamic hasVerityNum, verityNum;
@dynamic hasIconURL, iconURL;
@dynamic hasPushToken, pushToken;

typedef struct PBMThirdBangdingPhoneParam_Storage {
  uint32_t _has_storage_[1];
  int32_t type;
  NSString *nickName;
  NSString *openid;
  NSString *unionid;
  NSString *phoneNum;
  NSString *verityNum;
  NSString *iconURL;
  NSString *pushToken;
} PBMThirdBangdingPhoneParam_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "nickName",
        .number = PBMThirdBangdingPhoneParam_FieldNumber_NickName,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMThirdBangdingPhoneParam_Storage, nickName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "openid",
        .number = PBMThirdBangdingPhoneParam_FieldNumber_Openid,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMThirdBangdingPhoneParam_Storage, openid),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "unionid",
        .number = PBMThirdBangdingPhoneParam_FieldNumber_Unionid,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMThirdBangdingPhoneParam_Storage, unionid),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "type",
        .number = PBMThirdBangdingPhoneParam_FieldNumber_Type,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMThirdBangdingPhoneParam_Storage, type),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "phoneNum",
        .number = PBMThirdBangdingPhoneParam_FieldNumber_PhoneNum,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMThirdBangdingPhoneParam_Storage, phoneNum),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "verityNum",
        .number = PBMThirdBangdingPhoneParam_FieldNumber_VerityNum,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMThirdBangdingPhoneParam_Storage, verityNum),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "iconURL",
        .number = PBMThirdBangdingPhoneParam_FieldNumber_IconURL,
        .hasIndex = 6,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .type = GPBTypeString,
        .offset = offsetof(PBMThirdBangdingPhoneParam_Storage, iconURL),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "pushToken",
        .number = PBMThirdBangdingPhoneParam_FieldNumber_PushToken,
        .hasIndex = 7,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMThirdBangdingPhoneParam_Storage, pushToken),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\001\007\004\241!!\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMThirdBangdingPhoneParam class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMThirdBangdingPhoneParam_Storage)
                                             wireFormat:NO
                                    extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

@end

#pragma mark - PBMLogInParam

@implementation PBMLogInParam

@dynamic hasUserPhonenum, userPhonenum;
@dynamic hasUserPassword, userPassword;
@dynamic hasVeritynum, veritynum;
@dynamic hasPushToken, pushToken;

typedef struct PBMLogInParam_Storage {
  uint32_t _has_storage_[1];
  NSString *userPhonenum;
  NSString *userPassword;
  NSString *veritynum;
  NSString *pushToken;
} PBMLogInParam_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userPhonenum",
        .number = PBMLogInParam_FieldNumber_UserPhonenum,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMLogInParam_Storage, userPhonenum),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "userPassword",
        .number = PBMLogInParam_FieldNumber_UserPassword,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMLogInParam_Storage, userPassword),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "veritynum",
        .number = PBMLogInParam_FieldNumber_Veritynum,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMLogInParam_Storage, veritynum),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "pushToken",
        .number = PBMLogInParam_FieldNumber_PushToken,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMLogInParam_Storage, pushToken),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMLogInParam class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMLogInParam_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMOpenBetItem

@implementation PBMOpenBetItem

@dynamic hasUserId, userId;
@dynamic hasSessionContent, sessionContent;

typedef struct PBMOpenBetItem_Storage {
  uint32_t _has_storage_[1];
  NSString *sessionContent;
  int64_t userId;
} PBMOpenBetItem_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .number = PBMOpenBetItem_FieldNumber_UserId,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMOpenBetItem_Storage, userId),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "sessionContent",
        .number = PBMOpenBetItem_FieldNumber_SessionContent,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOpenBetItem_Storage, sessionContent),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMOpenBetItem class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMOpenBetItem_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMMyInforItem

@implementation PBMMyInforItem

@dynamic hasUserIcon, userIcon;
@dynamic hasUserName, userName;
@dynamic hasUserMoney, userMoney;
@dynamic hasRedGiftCount, redGiftCount;
@dynamic hasGiftCount, giftCount;
@dynamic hasMessageCount, messageCount;
@dynamic hasBetOpen, betOpen;

typedef struct PBMMyInforItem_Storage {
  uint32_t _has_storage_[1];
  BOOL betOpen;
  int32_t redGiftCount;
  int32_t giftCount;
  int32_t messageCount;
  NSString *userIcon;
  NSString *userName;
  NSString *userMoney;
} PBMMyInforItem_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userIcon",
        .number = PBMMyInforItem_FieldNumber_UserIcon,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMMyInforItem_Storage, userIcon),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "userName",
        .number = PBMMyInforItem_FieldNumber_UserName,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMMyInforItem_Storage, userName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "userMoney",
        .number = PBMMyInforItem_FieldNumber_UserMoney,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMMyInforItem_Storage, userMoney),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "redGiftCount",
        .number = PBMMyInforItem_FieldNumber_RedGiftCount,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMMyInforItem_Storage, redGiftCount),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "giftCount",
        .number = PBMMyInforItem_FieldNumber_GiftCount,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMMyInforItem_Storage, giftCount),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "messageCount",
        .number = PBMMyInforItem_FieldNumber_MessageCount,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMMyInforItem_Storage, messageCount),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "betOpen",
        .number = PBMMyInforItem_FieldNumber_BetOpen,
        .hasIndex = 6,
        .flags = GPBFieldOptional,
        .type = GPBTypeBool,
        .offset = offsetof(PBMMyInforItem_Storage, betOpen),
        .defaultValue.valueBool = NO,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMMyInforItem class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMMyInforItem_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMPushItem

@implementation PBMPushItem

@dynamic hasWinningPush, winningPush;
@dynamic hasGametypeId, gametypeId;
@dynamic hasNotroble, notroble;
@dynamic hasPushDevice, pushDevice;

typedef struct PBMPushItem_Storage {
  uint32_t _has_storage_[1];
  BOOL winningPush;
  BOOL notroble;
  NSString *gametypeId;
  NSString *pushDevice;
} PBMPushItem_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "winningPush",
        .number = PBMPushItem_FieldNumber_WinningPush,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeBool,
        .offset = offsetof(PBMPushItem_Storage, winningPush),
        .defaultValue.valueBool = NO,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gametypeId",
        .number = PBMPushItem_FieldNumber_GametypeId,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMPushItem_Storage, gametypeId),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "notroble",
        .number = PBMPushItem_FieldNumber_Notroble,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeBool,
        .offset = offsetof(PBMPushItem_Storage, notroble),
        .defaultValue.valueBool = NO,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "pushDevice",
        .number = PBMPushItem_FieldNumber_PushDevice,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMPushItem_Storage, pushDevice),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMPushItem class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMPushItem_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMUpdateVersion

@implementation PBMUpdateVersion

@dynamic hasUpdateType, updateType;
@dynamic hasUpdateContent, updateContent;
@dynamic hasUpdateURL, updateURL;

typedef struct PBMUpdateVersion_Storage {
  uint32_t _has_storage_[1];
  PBMUpdateVersion_UpdateType updateType;
  NSString *updateContent;
  NSString *updateURL;
} PBMUpdateVersion_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "updateType",
        .number = PBMUpdateVersion_FieldNumber_UpdateType,
        .hasIndex = 0,
        .flags = GPBFieldOptional | GPBFieldHasEnumDescriptor,
        .type = GPBTypeEnum,
        .offset = offsetof(PBMUpdateVersion_Storage, updateType),
        .defaultValue.valueEnum = PBMUpdateVersion_UpdateType_Noupdate,
        .typeSpecific.enumDescFunc = PBMUpdateVersion_UpdateType_EnumDescriptor,
        .fieldOptions = NULL,
      },
      {
        .name = "updateContent",
        .number = PBMUpdateVersion_FieldNumber_UpdateContent,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMUpdateVersion_Storage, updateContent),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "updateURL",
        .number = PBMUpdateVersion_FieldNumber_UpdateURL,
        .hasIndex = 2,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .type = GPBTypeString,
        .offset = offsetof(PBMUpdateVersion_Storage, updateURL),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    static GPBMessageEnumDescription enums[] = {
      { .enumDescriptorFunc = PBMUpdateVersion_UpdateType_EnumDescriptor },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\001\003\006\241!!\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMUpdateVersion class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:enums
                                              enumCount:sizeof(enums) / sizeof(GPBMessageEnumDescription)
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMUpdateVersion_Storage)
                                             wireFormat:NO
                                    extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

@end

#pragma mark - Enum PBMUpdateVersion_UpdateType

GPBEnumDescriptor *PBMUpdateVersion_UpdateType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageEnumValueDescription values[] = {
      { .name = "Noupdate", .number = PBMUpdateVersion_UpdateType_Noupdate },
      { .name = "Norecommon", .number = PBMUpdateVersion_UpdateType_Norecommon },
      { .name = "Recommon", .number = PBMUpdateVersion_UpdateType_Recommon },
      { .name = "Force", .number = PBMUpdateVersion_UpdateType_Force },
    };
    descriptor = [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PBMUpdateVersion_UpdateType)
                                                   values:values
                                               valueCount:sizeof(values) / sizeof(GPBMessageEnumValueDescription)
                                             enumVerifier:PBMUpdateVersion_UpdateType_IsValidValue];
  }
  return descriptor;
}

BOOL PBMUpdateVersion_UpdateType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PBMUpdateVersion_UpdateType_Noupdate:
    case PBMUpdateVersion_UpdateType_Norecommon:
    case PBMUpdateVersion_UpdateType_Recommon:
    case PBMUpdateVersion_UpdateType_Force:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - PBMGetDrawMoneyInfo

@implementation PBMGetDrawMoneyInfo

@dynamic hasBankItem, bankItem;
@dynamic hasMaxDrawCount, maxDrawCount;

typedef struct PBMGetDrawMoneyInfo_Storage {
  uint32_t _has_storage_[1];
  PBMGetDrawMoneyInfo_bankItem *bankItem;
  NSString *maxDrawCount;
} PBMGetDrawMoneyInfo_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "bankItem",
        .number = PBMGetDrawMoneyInfo_FieldNumber_BankItem,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMGetDrawMoneyInfo_Storage, bankItem),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMGetDrawMoneyInfo_bankItem),
        .fieldOptions = NULL,
      },
      {
        .name = "maxDrawCount",
        .number = PBMGetDrawMoneyInfo_FieldNumber_MaxDrawCount,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMGetDrawMoneyInfo_Storage, maxDrawCount),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMGetDrawMoneyInfo class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMGetDrawMoneyInfo_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMGetDrawMoneyInfo_bankItem

@implementation PBMGetDrawMoneyInfo_bankItem

@dynamic hasBankName, bankName;
@dynamic hasBankNum, bankNum;

typedef struct PBMGetDrawMoneyInfo_bankItem_Storage {
  uint32_t _has_storage_[1];
  NSString *bankName;
  NSString *bankNum;
} PBMGetDrawMoneyInfo_bankItem_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "bankName",
        .number = PBMGetDrawMoneyInfo_bankItem_FieldNumber_BankName,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMGetDrawMoneyInfo_bankItem_Storage, bankName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "bankNum",
        .number = PBMGetDrawMoneyInfo_bankItem_FieldNumber_BankNum,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMGetDrawMoneyInfo_bankItem_Storage, bankNum),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMGetDrawMoneyInfo_bankItem class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMGetDrawMoneyInfo_bankItem_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMSubmitDrawMoneyParam

@implementation PBMSubmitDrawMoneyParam

@dynamic hasAmount, amount;
@dynamic hasPassword, password;

typedef struct PBMSubmitDrawMoneyParam_Storage {
  uint32_t _has_storage_[1];
  NSString *amount;
  NSString *password;
} PBMSubmitDrawMoneyParam_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "amount",
        .number = PBMSubmitDrawMoneyParam_FieldNumber_Amount,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMSubmitDrawMoneyParam_Storage, amount),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "password",
        .number = PBMSubmitDrawMoneyParam_FieldNumber_Password,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMSubmitDrawMoneyParam_Storage, password),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMSubmitDrawMoneyParam class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMSubmitDrawMoneyParam_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMSubmitDrawMoneyInfo

@implementation PBMSubmitDrawMoneyInfo

@dynamic hasGetCount, getCount;
@dynamic hasMyMoney, myMoney;
@dynamic hasGetTime, getTime;

typedef struct PBMSubmitDrawMoneyInfo_Storage {
  uint32_t _has_storage_[1];
  NSString *getCount;
  NSString *myMoney;
  NSString *getTime;
} PBMSubmitDrawMoneyInfo_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "getCount",
        .number = PBMSubmitDrawMoneyInfo_FieldNumber_GetCount,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMSubmitDrawMoneyInfo_Storage, getCount),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "myMoney",
        .number = PBMSubmitDrawMoneyInfo_FieldNumber_MyMoney,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMSubmitDrawMoneyInfo_Storage, myMoney),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "getTime",
        .number = PBMSubmitDrawMoneyInfo_FieldNumber_GetTime,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMSubmitDrawMoneyInfo_Storage, getTime),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMSubmitDrawMoneyInfo class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMSubmitDrawMoneyInfo_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMFeeItem

@implementation PBMFeeItem

@dynamic hasRealGetCount, realGetCount;
@dynamic hasFeeCount, feeCount;

typedef struct PBMFeeItem_Storage {
  uint32_t _has_storage_[1];
  NSString *realGetCount;
  NSString *feeCount;
} PBMFeeItem_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "realGetCount",
        .number = PBMFeeItem_FieldNumber_RealGetCount,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFeeItem_Storage, realGetCount),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "feeCount",
        .number = PBMFeeItem_FieldNumber_FeeCount,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFeeItem_Storage, feeCount),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMFeeItem class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMFeeItem_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMFundDetailInfo

@implementation PBMFundDetailInfo

@dynamic hasFundTotal, fundTotal;
@dynamic hasFundUseale, fundUseale;
@dynamic hasFundFrozen, fundFrozen;
@dynamic hasFundDetailType, fundDetailType;
@dynamic fundDetaillistArray;
@dynamic hasFundDetailCount, fundDetailCount;

typedef struct PBMFundDetailInfo_Storage {
  uint32_t _has_storage_[1];
  int32_t fundDetailType;
  int32_t fundDetailCount;
  NSString *fundTotal;
  NSString *fundUseale;
  NSString *fundFrozen;
  NSMutableArray *fundDetaillistArray;
} PBMFundDetailInfo_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "fundTotal",
        .number = PBMFundDetailInfo_FieldNumber_FundTotal,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFundDetailInfo_Storage, fundTotal),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "fundUseale",
        .number = PBMFundDetailInfo_FieldNumber_FundUseale,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFundDetailInfo_Storage, fundUseale),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "fundFrozen",
        .number = PBMFundDetailInfo_FieldNumber_FundFrozen,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFundDetailInfo_Storage, fundFrozen),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "fundDetailType",
        .number = PBMFundDetailInfo_FieldNumber_FundDetailType,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMFundDetailInfo_Storage, fundDetailType),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "fundDetaillistArray",
        .number = PBMFundDetailInfo_FieldNumber_FundDetaillistArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMFundDetailInfo_Storage, fundDetaillistArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMFundDetailInfo_FundDetailItem),
        .fieldOptions = NULL,
      },
      {
        .name = "fundDetailCount",
        .number = PBMFundDetailInfo_FieldNumber_FundDetailCount,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMFundDetailInfo_Storage, fundDetailCount),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMFundDetailInfo class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMFundDetailInfo_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMFundDetailInfo_FundDetailItem

@implementation PBMFundDetailInfo_FundDetailItem

@dynamic hasFundTitle, fundTitle;
@dynamic hasFundTime, fundTime;
@dynamic hasFundValue, fundValue;
@dynamic hasFundType, fundType;
@dynamic hasProjectType, projectType;
@dynamic hasProjectId, projectId;
@dynamic hasSouceType, souceType;
@dynamic hasSouceId, souceId;
@dynamic hasGametypeId, gametypeId;

typedef struct PBMFundDetailInfo_FundDetailItem_Storage {
  uint32_t _has_storage_[1];
  int32_t souceType;
  int32_t gametypeId;
  NSString *fundTitle;
  NSString *fundTime;
  NSString *fundValue;
  NSString *fundType;
  NSString *projectType;
  NSString *projectId;
  int64_t souceId;
} PBMFundDetailInfo_FundDetailItem_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "fundTitle",
        .number = PBMFundDetailInfo_FundDetailItem_FieldNumber_FundTitle,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFundDetailInfo_FundDetailItem_Storage, fundTitle),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "fundTime",
        .number = PBMFundDetailInfo_FundDetailItem_FieldNumber_FundTime,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFundDetailInfo_FundDetailItem_Storage, fundTime),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "fundValue",
        .number = PBMFundDetailInfo_FundDetailItem_FieldNumber_FundValue,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFundDetailInfo_FundDetailItem_Storage, fundValue),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "fundType",
        .number = PBMFundDetailInfo_FundDetailItem_FieldNumber_FundType,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFundDetailInfo_FundDetailItem_Storage, fundType),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "projectType",
        .number = PBMFundDetailInfo_FundDetailItem_FieldNumber_ProjectType,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFundDetailInfo_FundDetailItem_Storage, projectType),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "projectId",
        .number = PBMFundDetailInfo_FundDetailItem_FieldNumber_ProjectId,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMFundDetailInfo_FundDetailItem_Storage, projectId),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "souceType",
        .number = PBMFundDetailInfo_FundDetailItem_FieldNumber_SouceType,
        .hasIndex = 6,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMFundDetailInfo_FundDetailItem_Storage, souceType),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "souceId",
        .number = PBMFundDetailInfo_FundDetailItem_FieldNumber_SouceId,
        .hasIndex = 7,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMFundDetailInfo_FundDetailItem_Storage, souceId),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "gametypeId",
        .number = PBMFundDetailInfo_FundDetailItem_FieldNumber_GametypeId,
        .hasIndex = 8,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMFundDetailInfo_FundDetailItem_Storage, gametypeId),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMFundDetailInfo_FundDetailItem class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMFundDetailInfo_FundDetailItem_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMRedGiftInfo

@implementation PBMRedGiftInfo

@dynamic giftListArray;
@dynamic hasGiftDetailType, giftDetailType;

typedef struct PBMRedGiftInfo_Storage {
  uint32_t _has_storage_[1];
  int32_t giftDetailType;
  NSMutableArray *giftListArray;
} PBMRedGiftInfo_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "giftListArray",
        .number = PBMRedGiftInfo_FieldNumber_GiftListArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMRedGiftInfo_Storage, giftListArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMRedGiftInfo_RedGiftItem),
        .fieldOptions = NULL,
      },
      {
        .name = "giftDetailType",
        .number = PBMRedGiftInfo_FieldNumber_GiftDetailType,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMRedGiftInfo_Storage, giftDetailType),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMRedGiftInfo class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMRedGiftInfo_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMRedGiftInfo_RedGiftItem

@implementation PBMRedGiftInfo_RedGiftItem

@dynamic hasGiftIcon, giftIcon;
@dynamic hasGiftName, giftName;
@dynamic hasGiftType, giftType;
@dynamic hasGiftTime, giftTime;
@dynamic hasGiftValue, giftValue;
@dynamic hasGiftUnuseableResonal, giftUnuseableResonal;

typedef struct PBMRedGiftInfo_RedGiftItem_Storage {
  uint32_t _has_storage_[1];
  NSString *giftIcon;
  NSString *giftName;
  NSString *giftType;
  NSString *giftTime;
  NSString *giftValue;
  NSString *giftUnuseableResonal;
} PBMRedGiftInfo_RedGiftItem_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "giftIcon",
        .number = PBMRedGiftInfo_RedGiftItem_FieldNumber_GiftIcon,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMRedGiftInfo_RedGiftItem_Storage, giftIcon),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "giftName",
        .number = PBMRedGiftInfo_RedGiftItem_FieldNumber_GiftName,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMRedGiftInfo_RedGiftItem_Storage, giftName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "giftType",
        .number = PBMRedGiftInfo_RedGiftItem_FieldNumber_GiftType,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMRedGiftInfo_RedGiftItem_Storage, giftType),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "giftTime",
        .number = PBMRedGiftInfo_RedGiftItem_FieldNumber_GiftTime,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMRedGiftInfo_RedGiftItem_Storage, giftTime),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "giftValue",
        .number = PBMRedGiftInfo_RedGiftItem_FieldNumber_GiftValue,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMRedGiftInfo_RedGiftItem_Storage, giftValue),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "giftUnuseableResonal",
        .number = PBMRedGiftInfo_RedGiftItem_FieldNumber_GiftUnuseableResonal,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMRedGiftInfo_RedGiftItem_Storage, giftUnuseableResonal),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMRedGiftInfo_RedGiftItem class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMRedGiftInfo_RedGiftItem_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMUserInfo

@implementation PBMUserInfo

@dynamic hasIsLogout, isLogout;
@dynamic hasName, name;
@dynamic hasIdCard, idCard;

typedef struct PBMUserInfo_Storage {
  uint32_t _has_storage_[1];
  BOOL isLogout;
  NSString *name;
  NSString *idCard;
} PBMUserInfo_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "isLogout",
        .number = PBMUserInfo_FieldNumber_IsLogout,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeBool,
        .offset = offsetof(PBMUserInfo_Storage, isLogout),
        .defaultValue.valueBool = NO,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "name",
        .number = PBMUserInfo_FieldNumber_Name,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMUserInfo_Storage, name),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "idCard",
        .number = PBMUserInfo_FieldNumber_IdCard,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMUserInfo_Storage, idCard),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMUserInfo class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMUserInfo_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMOpenBetParam

@implementation PBMOpenBetParam

@dynamic hasUserId, userId;
@dynamic hasUserName, userName;
@dynamic hasUserNo, userNo;
@dynamic hasBankNo, bankNo;
@dynamic hasBankName, bankName;
@dynamic hasBankId, bankId;
@dynamic hasCityName, cityName;
@dynamic hasCityCode, cityCode;
@dynamic hasPassword, password;

typedef struct PBMOpenBetParam_Storage {
  uint32_t _has_storage_[1];
  NSString *userId;
  NSString *userName;
  NSString *userNo;
  NSString *bankNo;
  NSString *bankName;
  NSString *bankId;
  NSString *cityName;
  NSString *password;
  int64_t cityCode;
} PBMOpenBetParam_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "userId",
        .number = PBMOpenBetParam_FieldNumber_UserId,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOpenBetParam_Storage, userId),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "userName",
        .number = PBMOpenBetParam_FieldNumber_UserName,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOpenBetParam_Storage, userName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "userNo",
        .number = PBMOpenBetParam_FieldNumber_UserNo,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOpenBetParam_Storage, userNo),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "bankNo",
        .number = PBMOpenBetParam_FieldNumber_BankNo,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOpenBetParam_Storage, bankNo),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "bankName",
        .number = PBMOpenBetParam_FieldNumber_BankName,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOpenBetParam_Storage, bankName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "bankId",
        .number = PBMOpenBetParam_FieldNumber_BankId,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOpenBetParam_Storage, bankId),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "cityName",
        .number = PBMOpenBetParam_FieldNumber_CityName,
        .hasIndex = 6,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOpenBetParam_Storage, cityName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "cityCode",
        .number = PBMOpenBetParam_FieldNumber_CityCode,
        .hasIndex = 7,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMOpenBetParam_Storage, cityCode),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "password",
        .number = PBMOpenBetParam_FieldNumber_Password,
        .hasIndex = 8,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMOpenBetParam_Storage, password),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMOpenBetParam class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMOpenBetParam_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMRechangeAlipay

@implementation PBMRechangeAlipay

@dynamic hasOrderString, orderString;

typedef struct PBMRechangeAlipay_Storage {
  uint32_t _has_storage_[1];
  NSString *orderString;
} PBMRechangeAlipay_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "orderString",
        .number = PBMRechangeAlipay_FieldNumber_OrderString,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMRechangeAlipay_Storage, orderString),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMRechangeAlipay class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMRechangeAlipay_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMRechangeYinlian

@implementation PBMRechangeYinlian

@dynamic hasTn, tn;

typedef struct PBMRechangeYinlian_Storage {
  uint32_t _has_storage_[1];
  NSString *tn;
} PBMRechangeYinlian_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "tn",
        .number = PBMRechangeYinlian_FieldNumber_Tn,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMRechangeYinlian_Storage, tn),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMRechangeYinlian class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMRechangeYinlian_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMRechangeLianlian

@implementation PBMRechangeLianlian

@dynamic hasOrderString, orderString;

typedef struct PBMRechangeLianlian_Storage {
  uint32_t _has_storage_[1];
  NSString *orderString;
} PBMRechangeLianlian_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "orderString",
        .number = PBMRechangeLianlian_FieldNumber_OrderString,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMRechangeLianlian_Storage, orderString),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMRechangeLianlian class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMRechangeLianlian_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMMsgListResult

@implementation PBMMsgListResult

@dynamic msgItemArray;
@dynamic hasType, type;
@dynamic hasCount, count;

typedef struct PBMMsgListResult_Storage {
  uint32_t _has_storage_[1];
  int32_t type;
  int32_t count;
  NSMutableArray *msgItemArray;
} PBMMsgListResult_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "msgItemArray",
        .number = PBMMsgListResult_FieldNumber_MsgItemArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeMessage,
        .offset = offsetof(PBMMsgListResult_Storage, msgItemArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = GPBStringifySymbol(PBMMsgListResult_MsgItem),
        .fieldOptions = NULL,
      },
      {
        .name = "type",
        .number = PBMMsgListResult_FieldNumber_Type,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMMsgListResult_Storage, type),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "count",
        .number = PBMMsgListResult_FieldNumber_Count,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt32,
        .offset = offsetof(PBMMsgListResult_Storage, count),
        .defaultValue.valueInt32 = 0,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMMsgListResult class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMMsgListResult_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMMsgListResult_MsgItem

@implementation PBMMsgListResult_MsgItem

@dynamic hasId_p, id_p;
@dynamic hasTitle, title;
@dynamic hasDesc, desc;
@dynamic hasTime, time;
@dynamic hasIsRead, isRead;
@dynamic hasAction, action;

typedef struct PBMMsgListResult_MsgItem_Storage {
  uint32_t _has_storage_[1];
  BOOL isRead;
  NSString *title;
  NSString *desc;
  NSString *time;
  NSString *action;
  int64_t id_p;
} PBMMsgListResult_MsgItem_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "id_p",
        .number = PBMMsgListResult_MsgItem_FieldNumber_Id_p,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMMsgListResult_MsgItem_Storage, id_p),
        .defaultValue.valueInt64 = 0LL,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "title",
        .number = PBMMsgListResult_MsgItem_FieldNumber_Title,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMMsgListResult_MsgItem_Storage, title),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "desc",
        .number = PBMMsgListResult_MsgItem_FieldNumber_Desc,
        .hasIndex = 2,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMMsgListResult_MsgItem_Storage, desc),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "time",
        .number = PBMMsgListResult_MsgItem_FieldNumber_Time,
        .hasIndex = 3,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMMsgListResult_MsgItem_Storage, time),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "isRead",
        .number = PBMMsgListResult_MsgItem_FieldNumber_IsRead,
        .hasIndex = 4,
        .flags = GPBFieldOptional,
        .type = GPBTypeBool,
        .offset = offsetof(PBMMsgListResult_MsgItem_Storage, isRead),
        .defaultValue.valueBool = NO,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "action",
        .number = PBMMsgListResult_MsgItem_FieldNumber_Action,
        .hasIndex = 5,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMMsgListResult_MsgItem_Storage, action),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMMsgListResult_MsgItem class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMMsgListResult_MsgItem_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMDeleteMsgRequest

@implementation PBMDeleteMsgRequest

@dynamic idArray;

typedef struct PBMDeleteMsgRequest_Storage {
  uint32_t _has_storage_[1];
  GPBInt64Array *idArray;
} PBMDeleteMsgRequest_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "idArray",
        .number = PBMDeleteMsgRequest_FieldNumber_IdArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMDeleteMsgRequest_Storage, idArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMDeleteMsgRequest class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMDeleteMsgRequest_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMMsgStatusResult

@implementation PBMMsgStatusResult

@dynamic idArray;

typedef struct PBMMsgStatusResult_Storage {
  uint32_t _has_storage_[1];
  GPBInt64Array *idArray;
} PBMMsgStatusResult_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "idArray",
        .number = PBMMsgStatusResult_FieldNumber_IdArray,
        .hasIndex = GPBNoHasBit,
        .flags = GPBFieldRepeated,
        .type = GPBTypeInt64,
        .offset = offsetof(PBMMsgStatusResult_Storage, idArray),
        .defaultValue.valueMessage = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMMsgStatusResult class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMMsgStatusResult_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMUserNameIconParam

@implementation PBMUserNameIconParam

@dynamic hasIcon, icon;
@dynamic hasNickName, nickName;

typedef struct PBMUserNameIconParam_Storage {
  uint32_t _has_storage_[1];
  NSData *icon;
  NSString *nickName;
} PBMUserNameIconParam_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "icon",
        .number = PBMUserNameIconParam_FieldNumber_Icon,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeData,
        .offset = offsetof(PBMUserNameIconParam_Storage, icon),
        .defaultValue.valueData = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "nickName",
        .number = PBMUserNameIconParam_FieldNumber_NickName,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMUserNameIconParam_Storage, nickName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMUserNameIconParam class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMUserNameIconParam_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMUserNameIconItem

@implementation PBMUserNameIconItem

@dynamic hasIconURL, iconURL;
@dynamic hasNickName, nickName;

typedef struct PBMUserNameIconItem_Storage {
  uint32_t _has_storage_[1];
  NSString *iconURL;
  NSString *nickName;
} PBMUserNameIconItem_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "iconURL",
        .number = PBMUserNameIconItem_FieldNumber_IconURL,
        .hasIndex = 0,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .type = GPBTypeString,
        .offset = offsetof(PBMUserNameIconItem_Storage, iconURL),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
      {
        .name = "nickName",
        .number = PBMUserNameIconItem_FieldNumber_NickName,
        .hasIndex = 1,
        .flags = GPBFieldOptional,
        .type = GPBTypeString,
        .offset = offsetof(PBMUserNameIconItem_Storage, nickName),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\001\001\004\241!!\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMUserNameIconItem class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMUserNameIconItem_Storage)
                                             wireFormat:NO
                                    extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

@end

#pragma mark - PBMShareImageParam

@implementation PBMShareImageParam

@dynamic hasImageBytes, imageBytes;

typedef struct PBMShareImageParam_Storage {
  uint32_t _has_storage_[1];
  NSData *imageBytes;
} PBMShareImageParam_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imageBytes",
        .number = PBMShareImageParam_FieldNumber_ImageBytes,
        .hasIndex = 0,
        .flags = GPBFieldOptional,
        .type = GPBTypeData,
        .offset = offsetof(PBMShareImageParam_Storage, imageBytes),
        .defaultValue.valueData = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMShareImageParam class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMShareImageParam_Storage)
                                             wireFormat:NO];
  }
  return descriptor;
}

@end

#pragma mark - PBMShareImageItem

@implementation PBMShareImageItem

@dynamic hasImageURL, imageURL;

typedef struct PBMShareImageItem_Storage {
  uint32_t _has_storage_[1];
  NSString *imageURL;
} PBMShareImageItem_Storage;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = NULL;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "imageURL",
        .number = PBMShareImageItem_FieldNumber_ImageURL,
        .hasIndex = 0,
        .flags = GPBFieldOptional | GPBFieldTextFormatNameCustom,
        .type = GPBTypeString,
        .offset = offsetof(PBMShareImageItem_Storage, imageURL),
        .defaultValue.valueString = nil,
        .typeSpecific.className = NULL,
        .fieldOptions = NULL,
      },
    };
#if GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    const char *extraTextFormatInfo = NULL;
#else
    static const char *extraTextFormatInfo = "\001\001\005\241!!\000";
#endif  // GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    descriptor = [GPBDescriptor allocDescriptorForClass:[PBMShareImageItem class]
                                              rootClass:[PBMUserAccountRoot class]
                                                   file:PBMUserAccountRoot_FileDescriptor()
                                                 fields:fields
                                             fieldCount:sizeof(fields) / sizeof(GPBMessageFieldDescription)
                                                 oneofs:NULL
                                             oneofCount:0
                                                  enums:NULL
                                              enumCount:0
                                                 ranges:NULL
                                             rangeCount:0
                                            storageSize:sizeof(PBMShareImageItem_Storage)
                                             wireFormat:NO
                                    extraTextFormatInfo:extraTextFormatInfo];
  }
  return descriptor;
}

@end


// @@protoc_insertion_point(global_scope)
